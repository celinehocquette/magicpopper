{"log_best_programs": true, "num_literals": 0, "total_programs": 12, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.000463915999999287, 0.0003910000000004743, 0.00043554199999995546, 0.00041695800000063343, 0.0005132499999991325, 0.0003677910000003948, 0.0003667079999996048, 0.0004070830000006964, 0.00036799999999992394, 0.0003927079999996863, 0.0004625419999992886, 0.0004264579999997409], "test": [0.09874108300000017, 0.1034051250000001, 0.040753958999999895, 0.31088454100000007, 0.30620133300000063, 0.09662079099999943, 0.04031220800000135, 0.03274533399999946, 0.032916625000000366, 0.06301858399999993, 0.06403204199999912, 1.410776125], "combine": [8.749999995671942e-07, 0.1054096659999999, 5.410000003536197e-07, 0.1744519579999988, 8.329999996448123e-07, 0.17910266600000035, 5.000000005139782e-07, 5.000000005139782e-07, 5.420000004363601e-07, 5.000000005139782e-07, 5.830000002760016e-07], "constrain": [0.0013419999999992882, 0.0013567499999993515, 0.001579082999999315, 0.00018987500000022806, 0.0014864170000006283, 0.00019241699999916761, 0.0016678329999990638, 0.00029445799999905375, 0.00024408300000011707, 0.00025683299999990084, 0.00023604099999907646], "find_bindings_prolog": [0.10269979199999923, 0.040271624999999034, 0.3102232919999999, 0.3054772500000009, 0.0959267920000002, 0.03983983400000035, 0.03227958399999942, 0.03243845799999967, 0.0625300830000004, 0.06355891699999994, 1.406274625]}, "final_exec_time": 15.402126124999999, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- last(A,ga),head(A,ga),magic(ga).\nmagic_value(A):- last(A,at),head(A,at),magic(at).\nmagic_value(A):- last(A,gk),head(A,gk),magic(gk).\nmagic_value(A):- last(A,ee),head(A,ee),magic(ee).\nmagic_value(A):- head(A,cm),last(A,cm),magic(cm).\nmagic_value(A):- last(A,ea),head(A,ea),magic(ea).\nmagic_value(A):- last(A,gf),head(A,gf),magic(gf).\nmagic_value(A):- head(A,eg),last(A,eg),magic(eg).\nmagic_value(A):- head(A,af),last(A,af),magic(af).\nmagic_value(A):- head(A,fi),last(A,fi),magic(fi).\nmagic_value(A):- head(A,dy),last(A,dy),magic(dy).\nmagic_value(A):- head(A,cg),last(A,cg),magic(cg).\nmagic_value(A):- head(A,fc),last(A,fc),magic(fc).\nmagic_value(A):- head(A,do),last(A,do),magic(do).\nmagic_value(A):- head(A,ds),last(A,ds),magic(ds).\nmagic_value(A):- head(A,eu),last(A,eu),magic(eu).\nmagic_value(A):- head(A,av),last(A,av),magic(av).\nmagic_value(A):- last(A,bq),head(A,bq),magic(bq).\nmagic_value(A):- last(A,fn),head(A,fn),magic(fn).\nmagic_value(A):- head(A,es),last(A,es),magic(es).\nmagic_value(A):- last(A,bb),head(A,bb),magic(bb).\nmagic_value(A):- head(A,c7),magic(c7).\nmagic_value(A):- head(A,dk),last(A,dk),magic(dk).\nmagic_value(A):- head(A,dp),last(A,dp),magic(dp).\nmagic_value(A):- head(A,ck),last(A,ck),magic(ck).\nmagic_value(A):- head(A,bp),last(A,bp),magic(bp).\nmagic_value(A):- last(A,c7),magic(c7).\nmagic_value(A):- head(A,eh),last(A,eh),magic(eh).\nmagic_value(A):- last(A,aj),head(A,aj),magic(aj).\nmagic_value(A):- last(A,cw),head(A,cw),magic(cw).\nmagic_value(A):- last(A,ay),head(A,ay),magic(ay).\nmagic_value(A):- last(A,dg),head(A,dg),magic(dg).\nmagic_value(A):- last(A,al),head(A,al),magic(al).\nmagic_value(A):- tail(A,C),head(C,c7),magic(c7).\nmagic_value(A):- last(A,fw),head(A,fw),magic(fw).\nmagic_value(A):- last(A,dw),head(A,dw),magic(dw).", "is_solution": true, "conf_matrix": [0, 0, 0, 0], "total_exec_time": 15.402099625, "durations": [{"operation": "Test", "called": 12, "total": 2.6004077500000005, "mean": 0.21670064583333337, "maximum": 1.410776125, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 11, "total": 2.491520251999999, "mean": 0.226501841090909, "maximum": 1.406274625, "__type__": "DurationSummary"}, {"operation": "Combine", "called": 11, "total": 0.4589691640000009, "mean": 0.04172446945454553, "maximum": 0.17910266600000035, "__type__": "DurationSummary"}, {"operation": "Constrain", "called": 11, "total": 0.00884578999999519, "mean": 0.00080416272727229, "maximum": 0.0016678329999990638, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 12, "total": 0.005011955999998818, "mean": 0.00041766299999990153, "maximum": 0.0005132499999991325, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_example/magicpopper_types/8000/4/stats.json", "end": false, "__type__": "Stats"}