{"log_best_programs": true, "num_literals": 0, "total_programs": 12, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.0008005420000003483, 0.00037712499999997817, 0.00043833299999995745, 0.0004184589999987054, 0.0007932909999990301, 0.0003384170000000353, 0.0003986249999989866, 0.0004519579999993084, 0.0003978749999991038, 0.00048512500000086334, 0.0003994590000004905, 0.0010264170000002792], "test": [0.10686691699999962, 0.11041820899999877, 0.05038041699999951, 0.3577611249999997, 0.11176608399999921, 0.3936382079999987, 0.051383916999999, 0.03998354199999987, 0.042042666000000395, 0.0721797500000001, 0.07359441700000069, 1.500728291999998], "combine": [7.499999998827889e-07, 0.12619637500000103, 6.670000001207654e-07, 0.2254040830000008, 0.23461224999999963, 7.919999998051708e-07, 6.250000001983835e-07, 8.749999995671942e-07, 5.829999984996448e-07, 5.420000004363601e-07, 1.624999999449983e-06], "constrain": [0.0020951669999984546, 0.0013420830000008266, 0.001659332999999208, 0.00041520899999980543, 0.001516541999999177, 0.00022204199999897867, 0.0019139169999995431, 0.00031208299999896383, 0.0002579580000006132, 0.00025833399999974915, 0.00028091699999954756], "find_bindings_prolog": [0.10966304199999932, 0.049878458000000236, 0.35705083399999893, 0.1109505420000012, 0.39288549999999844, 0.05072008399999994, 0.039380375000000356, 0.04152937500000142, 0.07166383300000057, 0.07307566700000123, 1.4958772080000013]}, "final_exec_time": 18.116009292, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- head(A,x),last(A,x),magic(x).\nmagic_value(A):- head(A,c7),magic(c7).\nmagic_value(A):- head(A,ce),last(A,ce),magic(ce).\nmagic_value(A):- head(A,er),last(A,er),magic(er).\nmagic_value(A):- head(A,en),last(A,en),magic(en).\nmagic_value(A):- last(A,ff),head(A,ff),magic(ff).\nmagic_value(A):- last(A,gp),head(A,gp),magic(gp).\nmagic_value(A):- last(A,dh),head(A,dh),magic(dh).\nmagic_value(A):- head(A,cx),last(A,cx),magic(cx).\nmagic_value(A):- head(A,eo),last(A,eo),magic(eo).\nmagic_value(A):- head(A,cg),last(A,cg),magic(cg).\nmagic_value(A):- head(A,ca),last(A,ca),magic(ca).\nmagic_value(A):- last(A,bh),head(A,bh),magic(bh).\nmagic_value(A):- last(A,do),head(A,do),magic(do).\nmagic_value(A):- last(A,fa),head(A,fa),magic(fa).\nmagic_value(A):- head(A,a),last(A,a),magic(a).\nmagic_value(A):- last(A,ao),head(A,ao),magic(ao).\nmagic_value(A):- head(A,bw),last(A,bw),magic(bw).\nmagic_value(A):- head(A,cz),last(A,cz),magic(cz).\nmagic_value(A):- last(A,am),head(A,am),magic(am).\nmagic_value(A):- last(A,ck),head(A,ck),magic(ck).\nmagic_value(A):- last(A,ag),head(A,ag),magic(ag).\nmagic_value(A):- last(A,ed),head(A,ed),magic(ed).\nmagic_value(A):- tail(A,B),head(B,c7),magic(c7).\nmagic_value(A):- head(A,dv),last(A,dv),magic(dv).\nmagic_value(A):- last(A,gr),head(A,gr),magic(gr).\nmagic_value(A):- head(A,cp),last(A,cp),magic(cp).\nmagic_value(A):- head(A,gm),last(A,gm),magic(gm).\nmagic_value(A):- last(A,c7),magic(c7).\nmagic_value(A):- last(A,fb),head(A,fb),magic(fb).\nmagic_value(A):- last(A,df),head(A,df),magic(df).\nmagic_value(A):- head(A,ga),last(A,ga),magic(ga).\nmagic_value(A):- last(A,ef),head(A,ef),magic(ef).\nmagic_value(A):- head(A,fv),last(A,fv),magic(fv).\nmagic_value(A):- head(A,v),last(A,v),magic(v).", "is_solution": true, "conf_matrix": [0, 0, 0, 0], "total_exec_time": 18.115982584, "durations": [{"operation": "Test", "called": 12, "total": 2.9107435439999936, "mean": 0.24256196199999946, "maximum": 1.500728291999998, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 11, "total": 2.792674918000003, "mean": 0.2538795380000003, "maximum": 1.4958772080000013, "__type__": "DurationSummary"}, {"operation": "Combine", "called": 11, "total": 0.5862191669999994, "mean": 0.05329265154545449, "maximum": 0.23461224999999963, "__type__": "DurationSummary"}, {"operation": "Constrain", "called": 11, "total": 0.010273584999994867, "mean": 0.0009339622727268061, "maximum": 0.0020951669999984546, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 12, "total": 0.0063256259999970865, "mean": 0.0005271354999997572, "maximum": 0.0010264170000002792, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_example/magicpopper_types/8000/8/stats.json", "end": false, "__type__": "Stats"}