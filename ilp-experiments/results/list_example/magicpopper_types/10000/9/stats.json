{"log_best_programs": true, "num_literals": 0, "total_programs": 12, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.0004991669999991899, 0.0003793750000014029, 0.0004457089999991837, 0.00042979200000026196, 0.0005627500000002783, 0.0003640830000009032, 0.0004059999999981301, 0.0004479170000024624, 0.00040525000000002365, 0.00042179100000083736, 0.0004702909999991789, 0.0004481249999983561], "test": [0.12441158300000055, 0.11476179099999939, 0.05088391700000017, 0.31569499999999984, 0.31547820899999834, 0.10755020799999926, 0.05119691600000209, 0.04018574999999913, 0.040034915999999754, 0.0767893750000006, 0.07692308400000059, 1.784506166], "combine": [8.329999996448123e-07, 0.13443091699999954, 5.84000000358742e-07, 0.22733233299999966, 9.169999977132193e-07, 0.23192258299999935, 5.409999985772629e-07, 5.840000021350988e-07, 5.409999985772629e-07, 5.829999984996448e-07, 5.419999986600033e-07], "constrain": [0.0013703750000004788, 0.0013862909999993178, 0.0017180830000000924, 0.00022691699999910497, 0.0014742919999974902, 0.00021654200000043033, 0.0017793750000016928, 0.0003241250000023399, 0.0002639170000016122, 0.0002628750000006619, 0.00026662499999829947], "find_bindings_prolog": [0.11395037499999994, 0.050290165999999914, 0.314941082999999, 0.31463025000000044, 0.10673329200000126, 0.0506267919999992, 0.03959000000000046, 0.03946049999999701, 0.07621291699999944, 0.07635920799999951, 1.7796625000000006]}, "final_exec_time": 20.791891625, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- last(A,al),head(A,al),magic(al).\nmagic_value(A):- last(A,bw),head(A,bw),magic(bw).\nmagic_value(A):- last(A,bb),head(A,bb),magic(bb).\nmagic_value(A):- last(A,j),head(A,j),magic(j).\nmagic_value(A):- head(A,k),last(A,k),magic(k).\nmagic_value(A):- head(A,gj),last(A,gj),magic(gj).\nmagic_value(A):- last(A,bv),head(A,bv),magic(bv).\nmagic_value(A):- last(A,c7),magic(c7).\nmagic_value(A):- last(A,dd),head(A,dd),magic(dd).\nmagic_value(A):- last(A,bo),head(A,bo),magic(bo).\nmagic_value(A):- head(A,aw),last(A,aw),magic(aw).\nmagic_value(A):- last(A,cn),head(A,cn),magic(cn).\nmagic_value(A):- last(A,az),head(A,az),magic(az).\nmagic_value(A):- last(A,dx),head(A,dx),magic(dx).\nmagic_value(A):- last(A,bc),head(A,bc),magic(bc).\nmagic_value(A):- head(A,ce),last(A,ce),magic(ce).\nmagic_value(A):- last(A,cq),head(A,cq),magic(cq).\nmagic_value(A):- head(A,av),last(A,av),magic(av).\nmagic_value(A):- last(A,cb),head(A,cb),magic(cb).\nmagic_value(A):- head(A,fh),last(A,fh),magic(fh).\nmagic_value(A):- tail(A,C),head(C,c7),magic(c7).\nmagic_value(A):- last(A,gs),head(A,gs),magic(gs).\nmagic_value(A):- last(A,ec),head(A,ec),magic(ec).\nmagic_value(A):- head(A,fz),last(A,fz),magic(fz).\nmagic_value(A):- last(A,ay),head(A,ay),magic(ay).\nmagic_value(A):- head(A,as),last(A,as),magic(as).\nmagic_value(A):- last(A,cp),head(A,cp),magic(cp).\nmagic_value(A):- last(A,u),head(A,u),magic(u).\nmagic_value(A):- last(A,an),head(A,an),magic(an).\nmagic_value(A):- last(A,ct),head(A,ct),magic(ct).\nmagic_value(A):- last(A,gf),head(A,gf),magic(gf).\nmagic_value(A):- head(A,eg),last(A,eg),magic(eg).\nmagic_value(A):- head(A,gq),last(A,gq),magic(gq).\nmagic_value(A):- head(A,e),last(A,e),magic(e).\nmagic_value(A):- head(A,c7),magic(c7).\nmagic_value(A):- head(A,db),last(A,db),magic(db).", "is_solution": true, "conf_matrix": [0, 0, 0, 0], "total_exec_time": 20.791841875, "durations": [{"operation": "Test", "called": 12, "total": 3.0984169149999996, "mean": 0.2582014095833333, "maximum": 1.784506166, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 11, "total": 2.9624570829999968, "mean": 0.26931428027272697, "maximum": 1.7796625000000006, "__type__": "DurationSummary"}, {"operation": "Combine", "called": 11, "total": 0.5936909579999927, "mean": 0.05397190527272661, "maximum": 0.23192258299999935, "__type__": "DurationSummary"}, {"operation": "Constrain", "called": 11, "total": 0.00928941700000152, "mean": 0.0008444924545455928, "maximum": 0.0017793750000016928, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 12, "total": 0.005280250000000208, "mean": 0.0004400208333333507, "maximum": 0.0005627500000002783, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_example/magicpopper_types/10000/9/stats.json", "end": false, "__type__": "Stats"}