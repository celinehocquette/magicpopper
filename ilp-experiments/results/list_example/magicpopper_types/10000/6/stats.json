{"log_best_programs": true, "num_literals": 0, "total_programs": 12, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.0004942499999991412, 0.00039487499999957265, 0.00043654199999920706, 0.00041904200000075775, 0.0005432089999999334, 0.0003628340000005892, 0.00040762499999758006, 0.00045166700000009996, 0.00039858399999914695, 0.00040579200000223636, 0.0004672499999998081, 0.00044495799999921815], "test": [0.12847833399999864, 0.11601662499999854, 0.05155066700000077, 0.3548311670000004, 0.3532284170000004, 0.1124432079999984, 0.052145041999999364, 0.040013666000000114, 0.03990554200000318, 0.08079137500000044, 0.08073274999999924, 0.4489497500000006], "combine": [7.499999998827889e-07, 0.13995833299999916, 5.420000004363601e-07, 0.2366347080000022, 8.330000014211691e-07, 0.24595954099999773, 5.409999985772629e-07, 5.419999986600033e-07, 4.5800000236795313e-07, 4.999999987376214e-07, 5.419999986600033e-07], "constrain": [0.001361958000000385, 0.0013687910000008685, 0.001670582999999226, 0.00019716699999960952, 0.0014422920000001227, 0.0002098749999994709, 0.0018429580000010048, 0.0003151250000001937, 0.0002487920000007193, 0.00024941699999914135, 0.00025808300000207396], "find_bindings_prolog": [0.11524224999999966, 0.0509833749999995, 0.35399291699999935, 0.3524186250000021, 0.11155554199999784, 0.051565332999999214, 0.03944712500000236, 0.039338374999999814, 0.08023770799999852, 0.0801786249999985, 0.44416650000000146]}, "final_exec_time": 19.185986375, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- last(A,fn),head(A,fn),magic(fn).\nmagic_value(A):- head(A,al),last(A,al),magic(al).\nmagic_value(A):- head(A,eo),last(A,eo),magic(eo).\nmagic_value(A):- head(A,fv),last(A,fv),magic(fv).\nmagic_value(A):- last(A,df),head(A,df),magic(df).\nmagic_value(A):- head(A,dy),last(A,dy),magic(dy).\nmagic_value(A):- head(A,gl),last(A,gl),magic(gl).\nmagic_value(A):- last(A,gc),head(A,gc),magic(gc).\nmagic_value(A):- tail(A,C),head(C,c7),magic(c7).\nmagic_value(A):- last(A,fi),head(A,fi),magic(fi).\nmagic_value(A):- last(A,c7),magic(c7).\nmagic_value(A):- last(A,eu),head(A,eu),magic(eu).\nmagic_value(A):- last(A,l),head(A,l),magic(l).\nmagic_value(A):- head(A,br),last(A,br),magic(br).\nmagic_value(A):- last(A,cq),head(A,cq),magic(cq).\nmagic_value(A):- last(A,bg),head(A,bg),magic(bg).\nmagic_value(A):- last(A,x),head(A,x),magic(x).\nmagic_value(A):- head(A,as),last(A,as),magic(as).\nmagic_value(A):- head(A,af),last(A,af),magic(af).\nmagic_value(A):- head(A,dk),last(A,dk),magic(dk).\nmagic_value(A):- head(A,c7),magic(c7).\nmagic_value(A):- head(A,cm),last(A,cm),magic(cm).\nmagic_value(A):- last(A,bi),head(A,bi),magic(bi).\nmagic_value(A):- last(A,dg),head(A,dg),magic(dg).\nmagic_value(A):- head(A,fk),last(A,fk),magic(fk).\nmagic_value(A):- head(A,o),last(A,o),magic(o).\nmagic_value(A):- last(A,k),head(A,k),magic(k).\nmagic_value(A):- last(A,ao),head(A,ao),magic(ao).\nmagic_value(A):- last(A,fl),head(A,fl),magic(fl).\nmagic_value(A):- last(A,cx),head(A,cx),magic(cx).\nmagic_value(A):- last(A,t),head(A,t),magic(t).\nmagic_value(A):- head(A,bv),last(A,bv),magic(bv).\nmagic_value(A):- last(A,by),head(A,by),magic(by).\nmagic_value(A):- last(A,q),head(A,q),magic(q).\nmagic_value(A):- last(A,fs),head(A,fs),magic(fs).\nmagic_value(A):- head(A,ci),last(A,ci),magic(ci).\nmagic_value(A):- head(A,dm),last(A,dm),magic(dm).", "is_solution": true, "conf_matrix": [0, 0, 0, 0], "total_exec_time": 19.185960041999998, "durations": [{"operation": "Test", "called": 12, "total": 1.859086543, "mean": 0.15492387858333334, "maximum": 0.4489497500000006, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 11, "total": 1.7191263749999983, "mean": 0.15628421590909075, "maximum": 0.44416650000000146, "__type__": "DurationSummary"}, {"operation": "Combine", "called": 11, "total": 0.6225572899999978, "mean": 0.05659611727272707, "maximum": 0.24595954099999773, "__type__": "DurationSummary"}, {"operation": "Constrain", "called": 11, "total": 0.009165041000002816, "mean": 0.0008331855454548014, "maximum": 0.0018429580000010048, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 12, "total": 0.005226627999997291, "mean": 0.00043555233333310756, "maximum": 0.0005432089999999334, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_example/magicpopper_types/10000/6/stats.json", "end": false, "__type__": "Stats"}