{"log_best_programs": true, "num_literals": 0, "total_programs": 10, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.0004907920000007948, 0.00038745899999881317, 0.0004319160000001432, 0.00041683400000103177, 0.0005039169999996318, 0.0003590839999993989, 0.0003830829999991181, 0.0004449589999993009, 0.0003916670000023714, 0.0004464579999989837], "test": [0.1252746250000012, 0.11680741700000041, 0.053676166999999, 0.32402416700000103, 0.32229754200000116, 0.11375583299999903, 0.05405716699999985, 0.042324624999999116, 0.04267279200000118, 0.5317681660000027], "combine": [7.499999998827889e-07, 0.13746995900000059, 5.420000004363601e-07, 0.22790941699999934, 8.749999995671942e-07, 0.2313768749999987, 5.419999986600033e-07, 5.830000020523585e-07, 5.409999985772629e-07], "constrain": [0.001363582999999835, 0.0013662500000002353, 0.0016901670000013524, 0.0001952090000010287, 0.0015799169999990426, 0.0002081670000002589, 0.001783917000000912, 0.00031787499999680335, 0.00026012500000049954], "find_bindings_prolog": [0.11600312499999887, 0.053123083000000904, 0.323265000000001, 0.32142737500000074, 0.1129486669999995, 0.053491541999999725, 0.04173545800000156, 0.04210787499999924, 0.5259323330000001]}, "final_exec_time": 18.325343083, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- last(A,bb),head(A,bb),magic(bb).\nmagic_value(A):- last(A,c7),magic(c7).\nmagic_value(A):- head(A,w),last(A,w),magic(w).\nmagic_value(A):- last(A,ad),head(A,ad),magic(ad).\nmagic_value(A):- head(A,c7),magic(c7).\nmagic_value(A):- head(A,cl),last(A,cl),magic(cl).\nmagic_value(A):- last(A,bn),head(A,bn),magic(bn).\nmagic_value(A):- last(A,aj),head(A,aj),magic(aj).\nmagic_value(A):- tail(A,C),head(C,c7),magic(c7).\nmagic_value(A):- head(A,gh),last(A,gh),magic(gh).\nmagic_value(A):- last(A,bv),head(A,bv),magic(bv).\nmagic_value(A):- last(A,fl),head(A,fl),magic(fl).\nmagic_value(A):- head(A,p),last(A,p),magic(p).\nmagic_value(A):- last(A,fm),head(A,fm),magic(fm).\nmagic_value(A):- head(A,et),last(A,et),magic(et).\nmagic_value(A):- head(A,g),last(A,g),magic(g).\nmagic_value(A):- last(A,n),head(A,n),magic(n).\nmagic_value(A):- last(A,fh),head(A,fh),magic(fh).\nmagic_value(A):- head(A,h),last(A,h),magic(h).\nmagic_value(A):- head(A,x),last(A,x),magic(x).\nmagic_value(A):- head(A,ez),last(A,ez),magic(ez).\nmagic_value(A):- head(A,cf),last(A,cf),magic(cf).\nmagic_value(A):- last(A,es),head(A,es),magic(es).\nmagic_value(A):- head(A,aw),last(A,aw),magic(aw).\nmagic_value(A):- head(A,gl),last(A,gl),magic(gl).\nmagic_value(A):- head(A,cb),last(A,cb),magic(cb).\nmagic_value(A):- last(A,ab),head(A,ab),magic(ab).\nmagic_value(A):- last(A,bz),head(A,bz),magic(bz).\nmagic_value(A):- head(A,cj),last(A,cj),magic(cj).\nmagic_value(A):- last(A,bo),head(A,bo),magic(bo).\nmagic_value(A):- head(A,ct),last(A,ct),magic(ct).\nmagic_value(A):- head(A,eo),last(A,eo),magic(eo).\nmagic_value(A):- head(A,ej),last(A,ej),magic(ej).\nmagic_value(A):- head(A,ba),last(A,ba),magic(ba).\nmagic_value(A):- head(A,ay),last(A,ay),magic(ay).\nmagic_value(A):- head(A,bi),last(A,bi),magic(bi).\nmagic_value(A):- last(A,dg),head(A,dg),magic(dg).\nmagic_value(A):- last(A,bc),head(A,bc),magic(bc).\nmagic_value(A):- last(A,fj),head(A,fj),magic(fj).\nmagic_value(A):- head(A,dq),last(A,dq),magic(dq).\nmagic_value(A):- last(A,b),head(A,b),magic(b).\nmagic_value(A):- last(A,cw),head(A,cw),magic(cw).\nmagic_value(A):- head(A,en),last(A,en),magic(en).\nmagic_value(A):- last(A,cu),head(A,cu),magic(cu).\nmagic_value(A):- head(A,do),last(A,do),magic(do).\nmagic_value(A):- last(A,o),head(A,o),magic(o).", "is_solution": true, "conf_matrix": [0, 0, 0, 0], "total_exec_time": 18.325313125, "durations": [{"operation": "Test", "called": 10, "total": 1.7266585010000046, "mean": 0.17266585010000046, "maximum": 0.5317681660000027, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 9, "total": 1.5900344580000016, "mean": 0.1766704953333335, "maximum": 0.5259323330000001, "__type__": "DurationSummary"}, {"operation": "Combine", "called": 9, "total": 0.5967600839999978, "mean": 0.06630667599999976, "maximum": 0.2313768749999987, "__type__": "DurationSummary"}, {"operation": "Constrain", "called": 9, "total": 0.008765209999999968, "mean": 0.0009739122222222187, "maximum": 0.001783917000000912, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 10, "total": 0.004256168999999588, "mean": 0.00042561689999995875, "maximum": 0.0005039169999996318, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_example/magicpopper_types/10000/8/stats.json", "end": false, "__type__": "Stats"}