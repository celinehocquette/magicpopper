{"log_best_programs": true, "num_literals": 0, "total_programs": 12, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.00047054100000032406, 0.0003671249999985804, 0.00041137499999877036, 0.0004098749999990048, 0.0005287080000009325, 0.0003455829999996496, 0.00038866600000098117, 0.0004590000000010974, 0.00039754199999997297, 0.00044837499999950126, 0.0003890840000000395, 0.0004472919999987113], "test": [0.11071574999999889, 0.11215516699999917, 0.04641533299999878, 0.31238254199999993, 0.10208737499999998, 0.3159086249999987, 0.0493377499999994, 0.03753220800000001, 0.0379175829999987, 0.06987445800000103, 0.07074125000000109, 0.3523133749999996], "combine": [7.090000000431473e-07, 0.1211822920000003, 5.000000005139782e-07, 0.19402691699999863, 0.19979204100000025, 6.670000001207654e-07, 5.000000005139782e-07, 5.000000005139782e-07, 6.249999984220267e-07, 6.660000000380251e-07, 4.5799999881523945e-07], "constrain": [0.001270667000000003, 0.001299458999998393, 0.001597666999998637, 0.0001979169999994923, 0.001380124999998955, 0.00021087500000049886, 0.001795417000000299, 0.0003054589999997859, 0.0002626669999994391, 0.00025233299999882775, 0.00023262500000065245], "find_bindings_prolog": [0.11145687500000001, 0.045935832999999704, 0.31169537499999933, 0.1013144170000011, 0.31515649999999873, 0.04881808400000054, 0.037003125000000026, 0.03739183299999915, 0.06934712500000018, 0.07023329199999928, 0.3482341669999993]}, "final_exec_time": 16.626765875, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- last(A,dw),head(A,dw),magic(dw).\nmagic_value(A):- head(A,ar),last(A,ar),magic(ar).\nmagic_value(A):- last(A,dx),head(A,dx),magic(dx).\nmagic_value(A):- head(A,ew),last(A,ew),magic(ew).\nmagic_value(A):- head(A,gp),last(A,gp),magic(gp).\nmagic_value(A):- head(A,ca),last(A,ca),magic(ca).\nmagic_value(A):- last(A,b),head(A,b),magic(b).\nmagic_value(A):- last(A,c),head(A,c),magic(c).\nmagic_value(A):- last(A,fa),head(A,fa),magic(fa).\nmagic_value(A):- last(A,cq),head(A,cq),magic(cq).\nmagic_value(A):- last(A,fh),head(A,fh),magic(fh).\nmagic_value(A):- last(A,aw),head(A,aw),magic(aw).\nmagic_value(A):- tail(A,B),head(B,c7),magic(c7).\nmagic_value(A):- head(A,de),last(A,de),magic(de).\nmagic_value(A):- last(A,dp),head(A,dp),magic(dp).\nmagic_value(A):- last(A,bw),head(A,bw),magic(bw).\nmagic_value(A):- head(A,cl),last(A,cl),magic(cl).\nmagic_value(A):- last(A,cx),head(A,cx),magic(cx).\nmagic_value(A):- head(A,fj),last(A,fj),magic(fj).\nmagic_value(A):- last(A,cu),head(A,cu),magic(cu).\nmagic_value(A):- last(A,ax),head(A,ax),magic(ax).\nmagic_value(A):- head(A,bs),last(A,bs),magic(bs).\nmagic_value(A):- head(A,c7),magic(c7).\nmagic_value(A):- head(A,aq),last(A,aq),magic(aq).\nmagic_value(A):- last(A,c7),magic(c7).\nmagic_value(A):- last(A,az),head(A,az),magic(az).\nmagic_value(A):- last(A,cr),head(A,cr),magic(cr).\nmagic_value(A):- last(A,dg),head(A,dg),magic(dg).\nmagic_value(A):- head(A,at),last(A,at),magic(at).\nmagic_value(A):- last(A,di),head(A,di),magic(di).\nmagic_value(A):- last(A,et),head(A,et),magic(et).\nmagic_value(A):- last(A,fc),head(A,fc),magic(fc).\nmagic_value(A):- last(A,av),head(A,av),magic(av).\nmagic_value(A):- last(A,df),head(A,df),magic(df).", "is_solution": true, "conf_matrix": [0, 0, 0, 0], "total_exec_time": 16.626736166, "durations": [{"operation": "Test", "called": 12, "total": 1.6173814159999953, "mean": 0.13478178466666627, "maximum": 0.3523133749999996, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 11, "total": 1.4965866259999974, "mean": 0.1360533296363634, "maximum": 0.3482341669999993, "__type__": "DurationSummary"}, {"operation": "Combine", "called": 11, "total": 0.5150058749999982, "mean": 0.046818715909090744, "maximum": 0.19979204100000025, "__type__": "DurationSummary"}, {"operation": "Constrain", "called": 11, "total": 0.008805210999994983, "mean": 0.0008004737272722713, "maximum": 0.001795417000000299, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 12, "total": 0.005063165999997565, "mean": 0.0004219304999997971, "maximum": 0.0005287080000009325, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_example/magicpopper_types/9000/0/stats.json", "end": false, "__type__": "Stats"}