{"log_best_programs": true, "num_literals": 0, "total_programs": 12, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.0004737499999993844, 0.0003718749999990223, 0.00040500000000065484, 0.00042312499999930253, 0.0004995829999998591, 0.0003579590000004629, 0.0003879579999992444, 0.00043891600000023345, 0.00039095900000063466, 0.0004071670000005412, 0.0004561249999994743, 0.0004375840000001574], "test": [0.11546725000000002, 0.11047008299999916, 0.045737917000000294, 0.32152154199999927, 0.3187596250000002, 0.10349637500000064, 0.04542262499999872, 0.03580845799999999, 0.03589108299999921, 0.06935099999999927, 0.06846716699999966, 0.36952658399999905], "combine": [7.07999999960407e-07, 0.12244012500000068, 5.420000004363601e-07, 0.20223333300000057, 8.329999996448123e-07, 0.20750858300000097, 5.410000003536197e-07, 5.420000004363601e-07, 5.000000005139782e-07, 5.419999986600033e-07, 5.420000004363601e-07], "constrain": [0.0013527920000004912, 0.001356583000001521, 0.0017038329999987667, 0.00018574999999998454, 0.001454917000000222, 0.00020858299999915175, 0.0018122500000004038, 0.00031108299999971223, 0.0002524580000002885, 0.0002630830000001083, 0.000290375000000509], "find_bindings_prolog": [0.1096773339999988, 0.04524224999999937, 0.3207655420000002, 0.31799833300000024, 0.10273654100000051, 0.04487845899999954, 0.03527462499999956, 0.03535520800000036, 0.06881920799999897, 0.06793879199999964, 0.3652424579999991]}, "final_exec_time": 16.841599332999998, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- last(A,i),head(A,i),magic(i).\nmagic_value(A):- last(A,az),head(A,az),magic(az).\nmagic_value(A):- head(A,eb),last(A,eb),magic(eb).\nmagic_value(A):- head(A,c7),magic(c7).\nmagic_value(A):- head(A,ck),last(A,ck),magic(ck).\nmagic_value(A):- last(A,cx),head(A,cx),magic(cx).\nmagic_value(A):- last(A,fr),head(A,fr),magic(fr).\nmagic_value(A):- head(A,da),last(A,da),magic(da).\nmagic_value(A):- last(A,dc),head(A,dc),magic(dc).\nmagic_value(A):- head(A,h),last(A,h),magic(h).\nmagic_value(A):- head(A,cn),last(A,cn),magic(cn).\nmagic_value(A):- last(A,ex),head(A,ex),magic(ex).\nmagic_value(A):- head(A,cp),last(A,cp),magic(cp).\nmagic_value(A):- last(A,a),head(A,a),magic(a).\nmagic_value(A):- tail(A,C),head(C,c7),magic(c7).\nmagic_value(A):- head(A,eu),last(A,eu),magic(eu).\nmagic_value(A):- head(A,ev),last(A,ev),magic(ev).\nmagic_value(A):- last(A,ds),head(A,ds),magic(ds).\nmagic_value(A):- head(A,ec),last(A,ec),magic(ec).\nmagic_value(A):- last(A,w),head(A,w),magic(w).\nmagic_value(A):- head(A,dz),last(A,dz),magic(dz).\nmagic_value(A):- head(A,bm),last(A,bm),magic(bm).\nmagic_value(A):- head(A,er),last(A,er),magic(er).\nmagic_value(A):- head(A,gq),last(A,gq),magic(gq).\nmagic_value(A):- head(A,ca),last(A,ca),magic(ca).\nmagic_value(A):- last(A,ce),head(A,ce),magic(ce).\nmagic_value(A):- head(A,ew),last(A,ew),magic(ew).\nmagic_value(A):- head(A,cy),last(A,cy),magic(cy).\nmagic_value(A):- last(A,s),head(A,s),magic(s).\nmagic_value(A):- last(A,fl),head(A,fl),magic(fl).\nmagic_value(A):- last(A,ci),head(A,ci),magic(ci).\nmagic_value(A):- last(A,c7),magic(c7).\nmagic_value(A):- last(A,ga),head(A,ga),magic(ga).\nmagic_value(A):- last(A,eq),head(A,eq),magic(eq).", "is_solution": true, "conf_matrix": [0, 0, 0, 0], "total_exec_time": 16.841573915999998, "durations": [{"operation": "Test", "called": 12, "total": 1.6399197089999955, "mean": 0.13665997574999963, "maximum": 0.36952658399999905, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 11, "total": 1.5139287499999963, "mean": 0.13762988636363602, "maximum": 0.3652424579999991, "__type__": "DurationSummary"}, {"operation": "Combine", "called": 11, "total": 0.5321867910000027, "mean": 0.04838061736363661, "maximum": 0.20750858300000097, "__type__": "DurationSummary"}, {"operation": "Constrain", "called": 11, "total": 0.00919170700000116, "mean": 0.0008356097272728326, "maximum": 0.0018122500000004038, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 12, "total": 0.0050500009999989715, "mean": 0.00042083341666658097, "maximum": 0.0004995829999998591, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_example/magicpopper_types/9000/4/stats.json", "end": false, "__type__": "Stats"}