{"log_best_programs": true, "num_literals": 0, "total_programs": 12, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.0004226670000004873, 0.0003390000000003113, 0.00038266700000022524, 0.0003644170000001168, 0.00046595799999948895, 0.0003165420000001973, 0.00032470800000083955, 0.0003810839999989213, 0.00036595899999980475, 0.00035945900000022846, 0.00040366700000049605, 0.0004055420000010912], "test": [0.0844819999999995, 0.08463995900000043, 0.03274891699999927, 0.25827158400000094, 0.2505015420000003, 0.07716425000000093, 0.0318940000000012, 0.024912625000000688, 0.02468216599999984, 0.048726166999999876, 0.04949229200000005, 0.8850365419999999], "combine": [5.830000002760016e-07, 0.08487750000000105, 5.000000005139782e-07, 0.14292825000000065, 6.670000001207654e-07, 0.1457654169999998, 4.999999987376214e-07, 6.250000001983835e-07, 5.000000005139782e-07, 4.160000006692144e-07, 4.5799999881523945e-07], "constrain": [0.001269374999999684, 0.001229625000000567, 0.0015224160000002485, 0.00016979199999944683, 0.0013316659999986769, 0.00017700000000075988, 0.0015205829999995757, 0.00028566699999998946, 0.0002263330000005226, 0.00022179100000130347, 0.00023208400000029883], "find_bindings_prolog": [0.08403262500000075, 0.03233029199999926, 0.2576722079999989, 0.24986583299999943, 0.07654404100000001, 0.0314815829999997, 0.02447433300000057, 0.024251958000000684, 0.048312958999998656, 0.04906162500000022, 0.8815310419999989]}, "final_exec_time": 11.95932125, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- head(A,al),last(A,al),magic(al).\nmagic_value(A):- head(A,gm),last(A,gm),magic(gm).\nmagic_value(A):- last(A,bh),head(A,bh),magic(bh).\nmagic_value(A):- head(A,eb),last(A,eb),magic(eb).\nmagic_value(A):- head(A,n),last(A,n),magic(n).\nmagic_value(A):- head(A,ez),last(A,ez),magic(ez).\nmagic_value(A):- head(A,dd),last(A,dd),magic(dd).\nmagic_value(A):- last(A,x),head(A,x),magic(x).\nmagic_value(A):- head(A,em),last(A,em),magic(em).\nmagic_value(A):- last(A,cy),head(A,cy),magic(cy).\nmagic_value(A):- last(A,c7),magic(c7).\nmagic_value(A):- last(A,cb),head(A,cb),magic(cb).\nmagic_value(A):- last(A,cq),head(A,cq),magic(cq).\nmagic_value(A):- last(A,bv),head(A,bv),magic(bv).\nmagic_value(A):- head(A,ck),last(A,ck),magic(ck).\nmagic_value(A):- head(A,as),last(A,as),magic(as).\nmagic_value(A):- head(A,am),last(A,am),magic(am).\nmagic_value(A):- head(A,r),last(A,r),magic(r).\nmagic_value(A):- head(A,bo),last(A,bo),magic(bo).\nmagic_value(A):- head(A,de),last(A,de),magic(de).\nmagic_value(A):- head(A,cp),last(A,cp),magic(cp).\nmagic_value(A):- head(A,go),last(A,go),magic(go).\nmagic_value(A):- last(A,at),head(A,at),magic(at).\nmagic_value(A):- last(A,eo),head(A,eo),magic(eo).\nmagic_value(A):- head(A,gn),last(A,gn),magic(gn).\nmagic_value(A):- tail(A,C),head(C,c7),magic(c7).\nmagic_value(A):- head(A,c7),magic(c7).\nmagic_value(A):- last(A,cr),head(A,cr),magic(cr).\nmagic_value(A):- head(A,cx),last(A,cx),magic(cx).\nmagic_value(A):- last(A,cw),head(A,cw),magic(cw).", "is_solution": true, "conf_matrix": [0, 0, 0, 0], "total_exec_time": 11.959296625, "durations": [{"operation": "Test", "called": 12, "total": 1.852552044000003, "mean": 0.15437933700000026, "maximum": 0.8850365419999999, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 11, "total": 1.759558498999997, "mean": 0.15995986354545427, "maximum": 0.8815310419999989, "__type__": "DurationSummary"}, {"operation": "Combine", "called": 11, "total": 0.3735754160000013, "mean": 0.03396140145454558, "maximum": 0.1457654169999998, "__type__": "DurationSummary"}, {"operation": "Constrain", "called": 11, "total": 0.008186332000001073, "mean": 0.0007442120000000975, "maximum": 0.0015224160000002485, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 12, "total": 0.004531670000002208, "mean": 0.00037763916666685066, "maximum": 0.00046595799999948895, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_example/magicpopper_types/7000/7/stats.json", "end": false, "__type__": "Stats"}