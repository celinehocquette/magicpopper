{"log_best_programs": true, "num_literals": 0, "total_programs": 12, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.00045879199999987463, 0.0003477500000013123, 0.00041000000000046555, 0.0003961249999999694, 0.00048174999999872625, 0.0003190829999990541, 0.0003714580000000467, 0.0004270410000000169, 0.00035358299999899145, 0.0003980830000003266, 0.00035608399999986773, 0.00044004099999916946], "test": [0.08741275000000037, 0.09447154200000085, 0.036158584000000715, 0.27866229099999984, 0.08467158400000052, 0.26716520899999985, 0.0372956250000005, 0.02975312499999916, 0.02964254099999941, 0.05466254199999909, 0.05418262500000104, 0.2841207499999996], "combine": [7.499999998827889e-07, 0.08781541699999984, 4.999999987376214e-07, 0.1477919579999991, 0.15115108400000032, 6.249999984220267e-07, 4.5900000067433666e-07, 5.419999986600033e-07, 5.420000004363601e-07, 4.589999988979798e-07, 4.999999987376214e-07], "constrain": [0.0012780000000010006, 0.0013375829999997535, 0.0015924999999992195, 0.00018158299999981864, 0.0012845000000005768, 0.0002263330000005226, 0.0016802079999997943, 0.0002767920000010804, 0.00023083299999981932, 0.00022762499999906538, 0.00023795899999967673], "find_bindings_prolog": [0.09384037500000098, 0.03572175000000044, 0.2780352500000003, 0.08399879100000085, 0.26650733299999985, 0.0368552090000005, 0.029304750000001434, 0.029190832999999472, 0.054211083000000215, 0.05372345799999856, 0.2800519589999997]}, "final_exec_time": 12.448281499999998, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- last(A,ck),head(A,ck),magic(ck).\nmagic_value(A):- head(A,ed),last(A,ed),magic(ed).\nmagic_value(A):- last(A,ff),head(A,ff),magic(ff).\nmagic_value(A):- tail(A,B),head(B,c7),magic(c7).\nmagic_value(A):- last(A,h),head(A,h),magic(h).\nmagic_value(A):- head(A,cl),last(A,cl),magic(cl).\nmagic_value(A):- head(A,fq),last(A,fq),magic(fq).\nmagic_value(A):- last(A,eq),head(A,eq),magic(eq).\nmagic_value(A):- head(A,fj),last(A,fj),magic(fj).\nmagic_value(A):- head(A,cy),last(A,cy),magic(cy).\nmagic_value(A):- head(A,as),last(A,as),magic(as).\nmagic_value(A):- last(A,gh),head(A,gh),magic(gh).\nmagic_value(A):- head(A,ak),last(A,ak),magic(ak).\nmagic_value(A):- last(A,cd),head(A,cd),magic(cd).\nmagic_value(A):- last(A,gk),head(A,gk),magic(gk).\nmagic_value(A):- head(A,ef),last(A,ef),magic(ef).\nmagic_value(A):- last(A,dl),head(A,dl),magic(dl).\nmagic_value(A):- head(A,c7),magic(c7).\nmagic_value(A):- head(A,db),last(A,db),magic(db).\nmagic_value(A):- last(A,dc),head(A,dc),magic(dc).\nmagic_value(A):- last(A,c7),magic(c7).\nmagic_value(A):- last(A,x),head(A,x),magic(x).\nmagic_value(A):- head(A,cf),last(A,cf),magic(cf).\nmagic_value(A):- last(A,cz),head(A,cz),magic(cz).\nmagic_value(A):- last(A,dr),head(A,dr),magic(dr).\nmagic_value(A):- last(A,fn),head(A,fn),magic(fn).\nmagic_value(A):- head(A,gg),last(A,gg),magic(gg).\nmagic_value(A):- last(A,fl),head(A,fl),magic(fl).\nmagic_value(A):- head(A,o),last(A,o),magic(o).\nmagic_value(A):- head(A,dh),last(A,dh),magic(dh).\nmagic_value(A):- head(A,k),last(A,k),magic(k).\nmagic_value(A):- last(A,bp),head(A,bp),magic(bp).\nmagic_value(A):- last(A,fe),head(A,fe),magic(fe).\nmagic_value(A):- head(A,df),last(A,df),magic(df).", "is_solution": true, "conf_matrix": [0, 0, 0, 0], "total_exec_time": 12.448256791999999, "durations": [{"operation": "Test", "called": 12, "total": 1.338199168000001, "mean": 0.11151659733333341, "maximum": 0.2841207499999996, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 11, "total": 1.2414407910000023, "mean": 0.11285825372727293, "maximum": 0.2800519589999997, "__type__": "DurationSummary"}, {"operation": "Combine", "called": 11, "total": 0.3867628359999937, "mean": 0.035160257818181245, "maximum": 0.15115108400000032, "__type__": "DurationSummary"}, {"operation": "Constrain", "called": 11, "total": 0.008553916000000328, "mean": 0.000777628727272757, "maximum": 0.0016802079999997943, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 12, "total": 0.004759789999997821, "mean": 0.0003966491666664851, "maximum": 0.00048174999999872625, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_example/magicpopper_types/7000/8/stats.json", "end": false, "__type__": "Stats"}