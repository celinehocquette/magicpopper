{"log_best_programs": true, "num_literals": 0, "total_programs": 1, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.0004970830000000093], "find_bindings_prolog": [0.013067958000000046], "test": [0.014025208999999983]}, "final_exec_time": 0.06751570800000001, "stages": [], "best_programs": [], "solution": {"code": "f([40, 62, 38, 4, 6, 70, 36, 50, 34, 54, 20, 58, 78, 96, 22, 54, 44, 86, 64, 26, 32, 8, 78, 48, 60, 40, 12, 50, 48, 12, 98, 62, 72, 66, 62]):- magic([40, 62, 38, 4, 6, 70, 36, 50, 34, 54, 20, 58, 78, 96, 22, 54, 44, 86, 64, 26, 32, 8, 78, 48, 60, 40, 12, 50, 48, 12, 98, 62, 72, 66, 62]).\nf([78, 56, 68, 2, 8, 88, 86, 4, 78, 16, 4, 80, 64, 56]):- magic([78, 56, 68, 2, 8, 88, 86, 4, 78, 16, 4, 80, 64, 56]).\nf([66, 70, 44, 10, 48, 98, 14, 68, 70, 18, 32, 74, 78, 88, 64, 38, 38, 18, 30, 12, 76, 92, 40, 68, 66, 50, 20, 48, 18, 2, 52, 14]):- magic([66, 70, 44, 10, 48, 98, 14, 68, 70, 18, 32, 74, 78, 88, 64, 38, 38, 18, 30, 12, 76, 92, 40, 68, 66, 50, 20, 48, 18, 2, 52, 14]).\nf([86, 6, 54, 26, 100, 32, 86, 80, 36, 64, 88, 32, 8, 98, 8, 2, 2, 96, 92, 100, 92, 86, 96, 94, 4, 16, 86, 54, 18, 96, 40, 66, 32]):- magic([86, 6, 54, 26, 100, 32, 86, 80, 36, 64, 88, 32, 8, 98, 8, 2, 2, 96, 92, 100, 92, 86, 96, 94, 4, 16, 86, 54, 18, 96, 40, 66, 32]).\nf([6, 78, 32, 74, 20, 80, 30, 40, 26, 6, 88, 46, 58, 42, 14, 10, 80, 50, 84, 8, 76, 80, 96, 58, 40, 50, 8]):- magic([6, 78, 32, 74, 20, 80, 30, 40, 26, 6, 88, 46, 58, 42, 14, 10, 80, 50, 84, 8, 76, 80, 96, 58, 40, 50, 8]).\nf([54, 72, 40, 54, 6, 94, 6, 40, 42, 44, 80, 8, 44, 10, 44, 30, 24, 40, 70, 20, 84, 24, 64, 50]):- magic([54, 72, 40, 54, 6, 94, 6, 40, 42, 44, 80, 8, 44, 10, 44, 30, 24, 40, 70, 20, 84, 24, 64, 50]).\nf([86, 32, 40, 32, 48, 50, 30, 24, 56, 32, 22, 24, 60, 40, 46, 94, 96, 84, 48, 2, 22, 2, 66, 68]):- magic([86, 32, 40, 32, 48, 50, 30, 24, 56, 32, 22, 24, 60, 40, 46, 94, 96, 84, 48, 2, 22, 2, 66, 68]).\nf([10, 28, 12, 4, 88, 20, 12, 22, 90, 50, 34, 54, 92, 58, 72, 82, 8]):- magic([10, 28, 12, 4, 88, 20, 12, 22, 90, 50, 34, 54, 92, 58, 72, 82, 8]).\nf([26, 20, 6, 4, 40, 56, 50, 44, 30, 58, 22, 34, 36, 50, 8, 12, 54, 56, 24, 94, 98, 16, 70, 56, 94, 56, 60, 70, 6, 82, 94, 34, 52, 74, 22, 36, 24, 84, 78, 66, 24, 58, 38, 80, 36]):- magic([26, 20, 6, 4, 40, 56, 50, 44, 30, 58, 22, 34, 36, 50, 8, 12, 54, 56, 24, 94, 98, 16, 70, 56, 94, 56, 60, 70, 6, 82, 94, 34, 52, 74, 22, 36, 24, 84, 78, 66, 24, 58, 38, 80, 36]).\nf([32, 2, 40, 76, 6, 96, 90, 90, 4, 70, 16, 8, 50, 72, 42, 90, 34, 86, 52, 6, 18, 24, 98, 16]):- magic([32, 2, 40, 76, 6, 96, 90, 90, 4, 70, 16, 8, 50, 72, 42, 90, 34, 86, 52, 6, 18, 24, 98, 16]).", "is_solution": true, "conf_matrix": [10, 0, 10, 0], "total_exec_time": 0.067501166, "durations": [{"operation": "Test", "called": 1, "total": 0.014025208999999983, "mean": 0.014025208999999983, "maximum": 0.014025208999999983, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 1, "total": 0.013067958000000046, "mean": 0.013067958000000046, "maximum": 0.013067958000000046, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 1, "total": 0.0004970830000000093, "mean": 0.0004970830000000093, "maximum": 0.0004970830000000093, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/evens/magicpopper_all/3/stats.json", "end": false, "__type__": "Stats"}