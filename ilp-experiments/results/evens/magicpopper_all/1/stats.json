{"log_best_programs": true, "num_literals": 0, "total_programs": 1, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.0004355000000000331], "find_bindings_prolog": [0.014733416999999971], "test": [0.015568458000000007]}, "final_exec_time": 0.06644520899999998, "stages": [], "best_programs": [], "solution": {"code": "f([14, 10, 12, 64, 78, 4, 56, 16, 44, 50, 66, 92, 66, 82, 42, 26, 36, 38, 54, 16, 16, 88, 58, 62, 50, 24, 32, 58, 66, 70, 52, 4, 20, 74, 6, 26]):- magic([14, 10, 12, 64, 78, 4, 56, 16, 44, 50, 66, 92, 66, 82, 42, 26, 36, 38, 54, 16, 16, 88, 58, 62, 50, 24, 32, 58, 66, 70, 52, 4, 20, 74, 6, 26]).\nf([86, 48, 64, 98, 76, 12, 98, 44, 60, 22, 82, 12, 30, 74, 100, 50, 20, 76, 4, 26, 96, 44, 86, 64, 64, 8, 96, 78, 50, 26, 72, 72, 18, 38, 42, 48]):- magic([86, 48, 64, 98, 76, 12, 98, 44, 60, 22, 82, 12, 30, 74, 100, 50, 20, 76, 4, 26, 96, 44, 86, 64, 64, 8, 96, 78, 50, 26, 72, 72, 18, 38, 42, 48]).\nf([36, 22, 42, 32, 50, 98, 100, 16, 48, 90, 94, 84, 24, 30, 14, 4, 24, 10, 34, 64, 44, 44, 46, 64, 36, 20, 84, 8, 48, 16, 70, 38, 94, 54]):- magic([36, 22, 42, 32, 50, 98, 100, 16, 48, 90, 94, 84, 24, 30, 14, 4, 24, 10, 34, 64, 44, 44, 46, 64, 36, 20, 84, 8, 48, 16, 70, 38, 94, 54]).\nf([10, 68, 14]):- magic([10, 68, 14]).\nf([88, 54, 2, 22, 76, 30, 2, 2, 44, 42, 32, 68, 62, 8, 76, 56, 84, 80, 92, 74, 82, 54, 88, 44, 18, 24, 36, 38, 78, 82, 12]):- magic([88, 54, 2, 22, 76, 30, 2, 2, 44, 42, 32, 68, 62, 8, 76, 56, 84, 80, 92, 74, 82, 54, 88, 44, 18, 24, 36, 38, 78, 82, 12]).\nf([60, 92, 80, 56, 50, 82, 70, 10, 4, 30, 22, 4, 30, 62, 94, 56, 34, 58, 90, 66, 30, 62, 20, 70]):- magic([60, 92, 80, 56, 50, 82, 70, 10, 4, 30, 22, 4, 30, 62, 94, 56, 34, 58, 90, 66, 30, 62, 20, 70]).\nf([40, 82, 92, 2, 2, 48, 80, 96, 50, 46, 26, 30, 78, 46, 88, 62, 20, 40, 42, 60, 38, 50, 16, 48, 78, 34, 82, 88, 36, 82, 46, 6, 8, 16]):- magic([40, 82, 92, 2, 2, 48, 80, 96, 50, 46, 26, 30, 78, 46, 88, 62, 20, 40, 42, 60, 38, 50, 16, 48, 78, 34, 82, 88, 36, 82, 46, 6, 8, 16]).\nf([78, 62, 76, 8, 76, 84, 78, 48, 72, 28, 28, 42, 58, 88, 34, 32, 100, 28, 48, 10, 44, 92, 14, 8, 4, 92, 76, 28, 4]):- magic([78, 62, 76, 8, 76, 84, 78, 48, 72, 28, 28, 42, 58, 88, 34, 32, 100, 28, 48, 10, 44, 92, 14, 8, 4, 92, 76, 28, 4]).\nf([62, 34, 40, 56, 74, 76, 28, 46, 98, 62, 34, 54, 98, 24, 22, 100, 46, 42, 80, 12, 36, 34, 68, 80, 98, 86, 42, 22, 82, 62, 74, 82, 38, 72, 58, 8, 12, 68, 14, 34, 4]):- magic([62, 34, 40, 56, 74, 76, 28, 46, 98, 62, 34, 54, 98, 24, 22, 100, 46, 42, 80, 12, 36, 34, 68, 80, 98, 86, 42, 22, 82, 62, 74, 82, 38, 72, 58, 8, 12, 68, 14, 34, 4]).\nf([76, 98, 50, 56, 50, 56, 42, 24, 26, 10, 24, 42, 84, 40, 98, 44, 28, 12, 92, 52, 50, 34, 64, 38]):- magic([76, 98, 50, 56, 50, 56, 42, 24, 26, 10, 24, 42, 84, 40, 98, 44, 28, 12, 92, 52, 50, 34, 64, 38]).", "is_solution": true, "conf_matrix": [10, 0, 10, 0], "total_exec_time": 0.06642887499999997, "durations": [{"operation": "Test", "called": 1, "total": 0.015568458000000007, "mean": 0.015568458000000007, "maximum": 0.015568458000000007, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 1, "total": 0.014733416999999971, "mean": 0.014733416999999971, "maximum": 0.014733416999999971, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 1, "total": 0.0004355000000000331, "mean": 0.0004355000000000331, "maximum": 0.0004355000000000331, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/evens/magicpopper_all/1/stats.json", "end": false, "__type__": "Stats"}