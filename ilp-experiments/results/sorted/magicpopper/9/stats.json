{"log_best_programs": true, "num_literals": 0, "total_programs": 1, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.0006678749999999845], "find_bindings_prolog": [0.02476095899999997], "bind": [0.020164041999999993], "test": [0.04542533400000004]}, "final_exec_time": 0.12515070900000003, "stages": [], "best_programs": [], "solution": {"code": "f([1, 2, 2, 7, 10, 10, 15, 16, 18, 18, 18, 19, 19, 22, 24, 25, 28, 31, 32, 33, 33, 34, 36, 42, 42, 47, 50, 51, 52, 52, 60, 61, 65, 69, 70, 71, 74, 77, 79, 81, 83, 86, 87, 91, 96, 97, 99, 100]):- magic([1, 2, 2, 7, 10, 10, 15, 16, 18, 18, 18, 19, 19, 22, 24, 25, 28, 31, 32, 33, 33, 34, 36, 42, 42, 47, 50, 51, 52, 52, 60, 61, 65, 69, 70, 71, 74, 77, 79, 81, 83, 86, 87, 91, 96, 97, 99, 100]).\nf([2, 6, 6, 9, 10, 14, 18, 21, 22, 23, 25, 34, 41, 41, 42, 42, 44, 45, 59, 60, 62, 63, 64, 64, 67, 68, 70, 70, 71, 75, 82, 84, 85, 86, 88, 89, 90, 93, 96, 96, 96, 101]):- magic([2, 6, 6, 9, 10, 14, 18, 21, 22, 23, 25, 34, 41, 41, 42, 42, 44, 45, 59, 60, 62, 63, 64, 64, 67, 68, 70, 70, 71, 75, 82, 84, 85, 86, 88, 89, 90, 93, 96, 96, 96, 101]).\nf([2, 7, 7, 7, 8, 8, 9, 9, 10, 12, 14, 16, 18, 19, 24, 25, 29, 31, 32, 34, 34, 36, 39, 40, 43, 44, 46, 48, 49, 49, 57, 59, 59, 62, 63, 70, 70, 70, 73, 74, 77, 85, 88, 94, 94, 95, 99, 99, 100, 100, 101]):- magic([2, 7, 7, 7, 8, 8, 9, 9, 10, 12, 14, 16, 18, 19, 24, 25, 29, 31, 32, 34, 34, 36, 39, 40, 43, 44, 46, 48, 49, 49, 57, 59, 59, 62, 63, 70, 70, 70, 73, 74, 77, 85, 88, 94, 94, 95, 99, 99, 100, 100, 101]).\nf([3, 7, 9, 18, 20, 21, 21, 21, 22, 23, 26, 29, 33, 37, 39, 43, 46, 46, 46, 48, 48, 48, 51, 53, 55, 56, 58, 63, 65, 67, 70, 70, 82, 84, 88, 89, 92, 92, 92, 92, 95]):- magic([3, 7, 9, 18, 20, 21, 21, 21, 22, 23, 26, 29, 33, 37, 39, 43, 46, 46, 46, 48, 48, 48, 51, 53, 55, 56, 58, 63, 65, 67, 70, 70, 82, 84, 88, 89, 92, 92, 92, 92, 95]).\nf([3, 7, 13, 14, 18, 22, 30, 34, 43, 46, 47, 47, 48, 49, 51, 52, 53, 57, 58, 59, 60, 60, 64, 71, 71, 77, 77, 78, 79, 81, 82, 85, 88, 89, 92, 92, 92, 93, 97]):- magic([3, 7, 13, 14, 18, 22, 30, 34, 43, 46, 47, 47, 48, 49, 51, 52, 53, 57, 58, 59, 60, 60, 64, 71, 71, 77, 77, 78, 79, 81, 82, 85, 88, 89, 92, 92, 92, 93, 97]).\nf([5, 12, 17, 19, 20, 38, 44, 46, 57, 65, 70, 71, 76, 79, 79, 81, 88, 98, 99, 101]):- magic([5, 12, 17, 19, 20, 38, 44, 46, 57, 65, 70, 71, 76, 79, 79, 81, 88, 98, 99, 101]).\nf([10, 14, 14, 16, 16, 19, 25, 27, 29, 29, 31, 40, 43, 43, 47, 49, 51, 72, 85, 92, 95, 96, 101]):- magic([10, 14, 14, 16, 16, 19, 25, 27, 29, 29, 31, 40, 43, 43, 47, 49, 51, 72, 85, 92, 95, 96, 101]).\nf([12, 12, 17, 19, 24, 26, 44, 49, 52, 57, 59, 59, 62, 69, 74, 79, 83, 84, 85, 90, 93, 94, 95]):- magic([12, 12, 17, 19, 24, 26, 44, 49, 52, 57, 59, 59, 62, 69, 74, 79, 83, 84, 85, 90, 93, 94, 95]).\nf([14, 14, 18, 29, 29, 33, 36, 66, 74, 77, 87, 90, 92, 97, 100]):- magic([14, 14, 18, 29, 29, 33, 36, 66, 74, 77, 87, 90, 92, 97, 100]).\nf([24, 28, 34, 41, 43, 46, 48, 64, 67, 74, 77, 83, 87, 90, 95, 97]):- magic([24, 28, 34, 41, 43, 46, 48, 64, 67, 74, 77, 83, 87, 90, 95, 97]).", "is_solution": true, "conf_matrix": [10, 0, 10, 0], "total_exec_time": 0.1251295, "durations": [{"operation": "Test", "called": 1, "total": 0.04542533400000004, "mean": 0.04542533400000004, "maximum": 0.04542533400000004, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 1, "total": 0.02476095899999997, "mean": 0.02476095899999997, "maximum": 0.02476095899999997, "__type__": "DurationSummary"}, {"operation": "Bind", "called": 1, "total": 0.020164041999999993, "mean": 0.020164041999999993, "maximum": 0.020164041999999993, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 1, "total": 0.0006678749999999845, "mean": 0.0006678749999999845, "maximum": 0.0006678749999999845, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/sorted/magicpopper/9/stats.json", "end": false, "__type__": "Stats"}