{"log_best_programs": true, "num_literals": 0, "total_programs": 1, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.0005220830000000065], "find_bindings_prolog": [0.014601709000000018], "bind": [0.016740542000000025], "test": [0.031859625]}, "final_exec_time": 0.08302258300000004, "stages": [], "best_programs": [], "solution": {"code": "f([25, 7, 9, 30, 83, 49, 15, 9, 17, 75, 12, 56, 52, 36, 67, 55, 77, 5, 13, 63, 96, 62, 12, 14, 18, 88, 91, 78, 35, 25, 57, 25, 81, 48, 11, 82, 76, 18, 7, 90, 5],52):- magic([25, 7, 9, 30, 83, 49, 15, 9, 17, 75, 12, 56, 52, 36, 67, 55, 77, 5, 13, 63, 96, 62, 12, 14, 18, 88, 91, 78, 35, 25, 57, 25, 81, 48, 11, 82, 76, 18, 7, 90, 5]),magic(52).\nf([31, 7, 26, 6, 35, 47, 69, 91, 14, 53, 71, 71, 70, 59, 30, 87, 49, 17, 38, 46, 59, 86, 67, 29, 28, 20, 8, 33, 59, 91, 26, 92, 31, 59, 94, 84, 8, 42, 73, 61, 4, 19, 6, 67, 50, 33, 73, 71],70):- magic([31, 7, 26, 6, 35, 47, 69, 91, 14, 53, 71, 71, 70, 59, 30, 87, 49, 17, 38, 46, 59, 86, 67, 29, 28, 20, 8, 33, 59, 91, 26, 92, 31, 59, 94, 84, 8, 42, 73, 61, 4, 19, 6, 67, 50, 33, 73, 71]),magic(70).\nf([45, 99, 9, 50, 13, 31, 18, 1, 92, 19, 21, 83, 82, 38, 48, 42, 32, 96, 80, 97],48):- magic([45, 99, 9, 50, 13, 31, 18, 1, 92, 19, 21, 83, 82, 38, 48, 42, 32, 96, 80, 97]),magic(48).\nf([49, 46, 41, 98, 97, 46, 91],98):- magic(98),magic([49, 46, 41, 98, 97, 46, 91]).\nf([50, 74, 86, 94, 4, 95, 89],4):- magic(4),magic([50, 74, 86, 94, 4, 95, 89]).\nf([67, 76, 27, 46, 79, 27, 21, 4, 99, 96, 86, 63, 63, 29, 11, 71, 45, 70, 61, 92, 98, 14, 76, 20, 39],76):- magic([67, 76, 27, 46, 79, 27, 21, 4, 99, 96, 86, 63, 63, 29, 11, 71, 45, 70, 61, 92, 98, 14, 76, 20, 39]),magic(76).\nf([73, 69, 39, 35, 40, 69, 89, 66, 51, 92, 81, 55, 8, 25, 57, 18, 8, 15, 65, 99, 1],69):- magic([73, 69, 39, 35, 40, 69, 89, 66, 51, 92, 81, 55, 8, 25, 57, 18, 8, 15, 65, 99, 1]),magic(69).\nf([90, 23, 28, 100, 30, 50, 31],100):- magic(100),magic([90, 23, 28, 100, 30, 50, 31]).\nf([91, 63, 18, 13, 3, 79, 36, 44, 10, 52, 7, 100, 47, 68, 15, 81, 91, 36, 78, 54, 31, 79, 80, 50, 70, 88, 29, 98, 10, 99, 8, 51, 36, 19, 72, 6, 95, 72],100):- magic(100),magic([91, 63, 18, 13, 3, 79, 36, 44, 10, 52, 7, 100, 47, 68, 15, 81, 91, 36, 78, 54, 31, 79, 80, 50, 70, 88, 29, 98, 10, 99, 8, 51, 36, 19, 72, 6, 95, 72]).\nf([101, 71, 57, 92, 58, 76, 15, 33, 4, 41, 76, 67, 96, 90, 20, 72, 64, 32, 53, 82, 54, 15, 96, 11, 52, 10, 53, 4, 45, 51, 1, 39, 5, 43, 51, 61, 95, 57, 46, 47, 19, 73, 79],19):- magic([101, 71, 57, 92, 58, 76, 15, 33, 4, 41, 76, 67, 96, 90, 20, 72, 64, 32, 53, 82, 54, 15, 96, 11, 52, 10, 53, 4, 45, 51, 1, 39, 5, 43, 51, 61, 95, 57, 46, 47, 19, 73, 79]),magic(19).", "is_solution": true, "conf_matrix": [10, 0, 10, 0], "total_exec_time": 0.083003208, "durations": [{"operation": "Test", "called": 1, "total": 0.031859625, "mean": 0.031859625, "maximum": 0.031859625, "__type__": "DurationSummary"}, {"operation": "Bind", "called": 1, "total": 0.016740542000000025, "mean": 0.016740542000000025, "maximum": 0.016740542000000025, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 1, "total": 0.014601709000000018, "mean": 0.014601709000000018, "maximum": 0.014601709000000018, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 1, "total": 0.0005220830000000065, "mean": 0.0005220830000000065, "maximum": 0.0005220830000000065, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/member/magicpopper/6/stats.json", "end": false, "__type__": "Stats"}