{"log_best_programs": true, "num_literals": 0, "total_programs": 1, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.0007980829999999495], "find_bindings_prolog": [0.019684833000000013], "bind": [0.026943834], "test": [0.047357709000000026]}, "final_exec_time": 0.137908584, "stages": [], "best_programs": [], "solution": {"code": "f([12, 14, 69, 86, 17, 36, 16, 14, 44, 97, 3, 87, 3],69):- magic([12, 14, 69, 86, 17, 36, 16, 14, 44, 97, 3, 87, 3]),magic(69).\nf([45, 64, 82, 69, 96, 76, 92, 66, 46, 9, 40, 47, 55, 79, 7, 43, 61, 17, 42, 21, 97, 59, 81, 39, 90],43):- magic([45, 64, 82, 69, 96, 76, 92, 66, 46, 9, 40, 47, 55, 79, 7, 43, 61, 17, 42, 21, 97, 59, 81, 39, 90]),magic(43).\nf([57, 66, 31, 83, 91, 26, 57, 35, 31, 66, 20, 56, 45, 13, 100, 72, 27, 10, 20, 99, 78, 2, 21, 13, 70, 95, 72, 78, 36, 98],99):- magic([57, 66, 31, 83, 91, 26, 57, 35, 31, 66, 20, 56, 45, 13, 100, 72, 27, 10, 20, 99, 78, 2, 21, 13, 70, 95, 72, 78, 36, 98]),magic(99).\nf([60, 18, 57, 25, 75, 85, 74, 101, 83, 86, 79, 55, 74, 23, 30],25):- magic([60, 18, 57, 25, 75, 85, 74, 101, 83, 86, 79, 55, 74, 23, 30]),magic(25).\nf([64, 15, 17, 83, 78, 8, 73, 56, 28, 73, 60, 15, 41, 8, 31, 92, 100, 12, 54],17):- magic(17),magic([64, 15, 17, 83, 78, 8, 73, 56, 28, 73, 60, 15, 41, 8, 31, 92, 100, 12, 54]).\nf([67, 28, 38, 8, 18, 34, 28, 44, 55, 15, 100, 59, 72, 32, 38, 72, 13],8):- magic([67, 28, 38, 8, 18, 34, 28, 44, 55, 15, 100, 59, 72, 32, 38, 72, 13]),magic(8).\nf([72, 41, 70, 66, 57, 92, 59, 36, 49, 27, 54, 85, 12, 94, 47, 44, 52, 98, 45, 28, 16, 18, 87, 5, 83, 95, 64, 77, 70, 80, 92],72):- magic(72),magic([72, 41, 70, 66, 57, 92, 59, 36, 49, 27, 54, 85, 12, 94, 47, 44, 52, 98, 45, 28, 16, 18, 87, 5, 83, 95, 64, 77, 70, 80, 92]).\nf([93, 66, 84, 82, 64, 54, 18, 35, 33, 61, 13],35):- magic([93, 66, 84, 82, 64, 54, 18, 35, 33, 61, 13]),magic(35).\nf([96, 98, 28, 95, 33, 78, 45, 13, 68, 55, 52, 94, 32, 54, 75, 30, 69, 23, 39, 40, 62, 77, 31, 50, 55, 68, 41, 37, 41, 77, 52, 17, 15, 69, 34, 98, 5, 66, 14, 25, 27, 64, 98, 87, 47, 95, 37, 49, 56, 36, 99],32):- magic([96, 98, 28, 95, 33, 78, 45, 13, 68, 55, 52, 94, 32, 54, 75, 30, 69, 23, 39, 40, 62, 77, 31, 50, 55, 68, 41, 37, 41, 77, 52, 17, 15, 69, 34, 98, 5, 66, 14, 25, 27, 64, 98, 87, 47, 95, 37, 49, 56, 36, 99]),magic(32).\nf([100, 37, 101, 82, 18, 29, 51, 100, 89, 31, 45, 60, 92, 98, 89, 4, 89, 59, 39, 86, 6, 61, 52, 55, 61, 43, 101],45):- magic([100, 37, 101, 82, 18, 29, 51, 100, 89, 31, 45, 60, 92, 98, 89, 4, 89, 59, 39, 86, 6, 61, 52, 55, 61, 43, 101]),magic(45).", "is_solution": true, "conf_matrix": [10, 0, 10, 0], "total_exec_time": 0.13788099999999998, "durations": [{"operation": "Test", "called": 1, "total": 0.047357709000000026, "mean": 0.047357709000000026, "maximum": 0.047357709000000026, "__type__": "DurationSummary"}, {"operation": "Bind", "called": 1, "total": 0.026943834, "mean": 0.026943834, "maximum": 0.026943834, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 1, "total": 0.019684833000000013, "mean": 0.019684833000000013, "maximum": 0.019684833000000013, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 1, "total": 0.0007980829999999495, "mean": 0.0007980829999999495, "maximum": 0.0007980829999999495, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/member/magicpopper/0/stats.json", "end": false, "__type__": "Stats"}