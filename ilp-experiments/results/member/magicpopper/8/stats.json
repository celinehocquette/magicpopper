{"log_best_programs": true, "num_literals": 0, "total_programs": 1, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.0006973750000000001], "find_bindings_prolog": [0.017439000000000038], "bind": [0.02233637500000002], "test": [0.04040408299999998]}, "final_exec_time": 0.10699425000000001, "stages": [], "best_programs": [], "solution": {"code": "f([59, 35, 9, 99, 11, 39, 57, 15, 83, 12, 85, 12, 94, 60, 44, 75, 68, 5, 53, 16, 15, 16, 23, 37, 13, 48, 34, 84, 77, 79, 75, 99, 61, 19, 21, 57, 71, 5, 31, 10, 65, 11, 63, 51, 35, 24, 66, 75, 90, 83, 92],5):- magic(5),magic([59, 35, 9, 99, 11, 39, 57, 15, 83, 12, 85, 12, 94, 60, 44, 75, 68, 5, 53, 16, 15, 16, 23, 37, 13, 48, 34, 84, 77, 79, 75, 99, 61, 19, 21, 57, 71, 5, 31, 10, 65, 11, 63, 51, 35, 24, 66, 75, 90, 83, 92]).\nf([19, 23, 56, 4, 24, 100, 52, 8, 5, 1, 44, 41, 77, 48, 73, 3, 5, 28, 1, 74, 63, 26, 90, 80],23):- magic(23),magic([19, 23, 56, 4, 24, 100, 52, 8, 5, 1, 44, 41, 77, 48, 73, 3, 5, 28, 1, 74, 63, 26, 90, 80]).\nf([28, 12, 54, 98, 62, 85, 6, 44, 84, 88, 46, 47, 10, 22, 13],44):- magic(44),magic([28, 12, 54, 98, 62, 85, 6, 44, 84, 88, 46, 47, 10, 22, 13]).\nf([48, 82, 86, 96, 51, 7, 22, 74, 65, 47, 19, 58, 40],47):- magic(47),magic([48, 82, 86, 96, 51, 7, 22, 74, 65, 47, 19, 58, 40]).\nf([57, 77, 56, 68],56):- magic([57, 77, 56, 68]),magic(56).\nf([78, 86, 1, 56, 75, 80, 69, 66, 33, 17, 37, 86, 78, 55, 19, 26, 67, 86, 62, 99, 40, 64, 76],64):- magic(64),magic([78, 86, 1, 56, 75, 80, 69, 66, 33, 17, 37, 86, 78, 55, 19, 26, 67, 86, 62, 99, 40, 64, 76]).\nf([30, 52, 2, 64, 43, 99, 74, 43, 67, 47, 88, 91, 92, 96, 35, 76, 64, 85, 40, 46, 44, 70, 28],70):- magic([30, 52, 2, 64, 43, 99, 74, 43, 67, 47, 88, 91, 92, 96, 35, 76, 64, 85, 40, 46, 44, 70, 28]),magic(70).\nf([72, 56, 17, 56, 28, 39, 74],74):- magic(74),magic([72, 56, 17, 56, 28, 39, 74]).\nf([31, 57, 48, 37, 98, 68, 45, 69, 76, 64, 56, 18, 60, 101, 50, 48, 36, 8, 13, 65, 15, 79, 100, 71, 77, 28, 15, 73],79):- magic(79),magic([31, 57, 48, 37, 98, 68, 45, 69, 76, 64, 56, 18, 60, 101, 50, 48, 36, 8, 13, 65, 15, 79, 100, 71, 77, 28, 15, 73]).\nf([63, 94, 84, 70, 90, 92, 21, 5, 49, 76, 68, 23, 70, 38, 34, 57, 46, 39, 32, 5, 79, 83, 12, 15, 56, 67, 93, 21, 23, 56, 58, 13, 34, 70, 14],93):- magic(93),magic([63, 94, 84, 70, 90, 92, 21, 5, 49, 76, 68, 23, 70, 38, 34, 57, 46, 39, 32, 5, 79, 83, 12, 15, 56, 67, 93, 21, 23, 56, 58, 13, 34, 70, 14]).", "is_solution": true, "conf_matrix": [10, 0, 10, 0], "total_exec_time": 0.106972334, "durations": [{"operation": "Test", "called": 1, "total": 0.04040408299999998, "mean": 0.04040408299999998, "maximum": 0.04040408299999998, "__type__": "DurationSummary"}, {"operation": "Bind", "called": 1, "total": 0.02233637500000002, "mean": 0.02233637500000002, "maximum": 0.02233637500000002, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 1, "total": 0.017439000000000038, "mean": 0.017439000000000038, "maximum": 0.017439000000000038, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 1, "total": 0.0006973750000000001, "mean": 0.0006973750000000001, "maximum": 0.0006973750000000001, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/member/magicpopper/8/stats.json", "end": false, "__type__": "Stats"}