{"log_best_programs": true, "num_literals": 0, "total_programs": 8, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.0004224159999999255, 0.0007184170000000822, 0.0012612499999999915, 0.001785292000000105, 0.0018783749999999877, 0.0011920839999999266, 0.0010149589999999264, 0.0008093339999999394, 0.0018424580000000468], "find_bindings_prolog": [0.0402695420000001, 0.037458250000000026, 0.15561991600000002, 0.18850245800000032, 0.16837491699999996, 0.15559624999999988], "test": [0.04894820799999988, 0.05065649999999988, 0.023898375000000138, 0.15595283400000004, 0.024771333999999756, 0.18915504199999988, 0.168714708, 0.1559727500000001], "combine": [0.11569391600000012, 0.006336625000000096, 5.83000000053957e-07, 7.080000001824516e-07, 8.750000000112834e-07, 5.409999999095305e-07, 5.839999999146528e-07, 5.409999999095305e-07], "constrain": [0.0020833749999999984, 0.0024903750000000446, 0.0004711249999997946, 0.00420716600000004, 0.0007823330000000794, 0.005433250000000278, 0.0018440840000000236, 0.001701957999999948]}, "final_exec_time": 2.273552, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- head(A,hr),magic(hr).\nmagic_value(A):- head(A,hd),magic(hd).\nmagic_value(A):- head(A,gf),magic(gf).\nmagic_value(A):- head(A,cz),magic(cz).\nmagic_value(A):- head(A,oz),magic(oz).\nmagic_value(A):- head(A,bj),magic(bj).\nmagic_value(A):- head(A,ln),magic(ln).\nmagic_value(A):- head(A,at),magic(at).\nmagic_value(A):- head(A,mk),magic(mk).\nmagic_value(A):- head(A,nv),magic(nv).\nmagic_value(A):- head(A,qc),magic(qc).\nmagic_value(A):- head(A,hx),magic(hx).\nmagic_value(A):- head(A,fh),magic(fh).\nmagic_value(A):- head(A,cb),magic(cb).\nmagic_value(A):- head(A,cv),magic(cv).\nmagic_value(A):- head(A,lo),magic(lo).\nmagic_value(A):- head(A,hy),magic(hy).\nmagic_value(A):- head(A,bi),magic(bi).\nmagic_value(A):- head(A,be),magic(be).\nmagic_value(A):- head(A,hc),magic(hc).\nmagic_value(A):- head(A,hn),magic(hn).\nmagic_value(A):- head(A,mq),magic(mq).\nmagic_value(A):- head(A,ru),magic(ru).\nmagic_value(A):- head(A,gw),magic(gw).\nmagic_value(A):- head(A,pu),magic(pu).\nmagic_value(A):- head(A,nx),magic(nx).\nmagic_value(A):- head(A,rp),magic(rp).\nmagic_value(A):- head(A,gg),magic(gg).\nmagic_value(A):- head(A,kk),magic(kk).\nmagic_value(A):- head(A,hm),magic(hm).\nmagic_value(A):- head(A,mu),magic(mu).\nmagic_value(A):- head(A,qn),magic(qn).\nmagic_value(A):- head(A,ce),magic(ce).\nmagic_value(A):- head(A,j),magic(j).\nmagic_value(A):- head(A,mm),magic(mm).\nmagic_value(A):- head(A,rt),magic(rt).\nmagic_value(A):- head(A,oq),magic(oq).\nmagic_value(A):- head(A,u),magic(u).\nmagic_value(A):- head(A,ii),magic(ii).\nmagic_value(A):- head(A,cy),magic(cy).\nmagic_value(A):- head(A,cu),magic(cu).\nmagic_value(A):- head(A,qv),magic(qv).\nmagic_value(A):- head(A,cm),magic(cm).\nmagic_value(A):- head(A,nq),magic(nq).\nmagic_value(A):- head(A,qa),magic(qa).\nmagic_value(A):- head(A,rs),magic(rs).\nmagic_value(A):- head(A,nc),magic(nc).\nmagic_value(A):- head(A,dz),magic(dz).\nmagic_value(A):- head(A,db),magic(db).\nmagic_value(A):- head(A,on),magic(on).\nmagic_value(A):- head(A,gm),magic(gm).\nmagic_value(A):- head(A,gs),magic(gs).\nmagic_value(A):- head(A,le),magic(le).\nmagic_value(A):- head(A,l),magic(l).\nmagic_value(A):- head(A,kg),magic(kg).\nmagic_value(A):- head(A,lj),magic(lj).\nmagic_value(A):- head(A,m),magic(m).\nmagic_value(A):- head(A,km),magic(km).\nmagic_value(A):- head(A,ps),magic(ps).\nmagic_value(A):- head(A,ek),magic(ek).\nmagic_value(A):- head(A,ar),magic(ar).\nmagic_value(A):- head(A,pf),magic(pf).\nmagic_value(A):- head(A,mv),magic(mv).\nmagic_value(A):- head(A,n),magic(n).\nmagic_value(A):- head(A,du),magic(du).\nmagic_value(A):- head(A,fw),magic(fw).\nmagic_value(A):- head(A,pc),magic(pc).\nmagic_value(A):- head(A,gj),magic(gj).\nmagic_value(A):- head(A,fa),magic(fa).\nmagic_value(A):- head(A,ds),magic(ds).\nmagic_value(A):- head(A,ae),magic(ae).\nmagic_value(A):- head(A,ff),magic(ff).\nmagic_value(A):- head(A,oj),magic(oj).\nmagic_value(A):- head(A,kx),magic(kx).\nmagic_value(A):- head(A,an),magic(an).\nmagic_value(A):- head(A,gd),magic(gd).\nmagic_value(A):- head(A,gn),magic(gn).\nmagic_value(A):- head(A,pq),magic(pq).\nmagic_value(A):- head(A,ch),magic(ch).\nmagic_value(A):- head(A,ri),magic(ri).\nmagic_value(A):- head(A,rw),magic(rw).\nmagic_value(A):- head(A,qe),magic(qe).\nmagic_value(A):- head(A,es),magic(es).\nmagic_value(A):- head(A,pk),magic(pk).\nmagic_value(A):- head(A,sh),magic(sh).\nmagic_value(A):- head(A,ay),magic(ay).\nmagic_value(A):- head(A,of),magic(of).\nmagic_value(A):- head(A,ko),magic(ko).\nmagic_value(A):- head(A,jo),magic(jo).\nmagic_value(A):- head(A,dk),magic(dk).", "is_solution": true, "conf_matrix": [200, 0, 200, 0], "total_exec_time": 2.273548625, "durations": [{"operation": "Test", "called": 1, "total": 0.04894820799999988, "mean": 0.04894820799999988, "maximum": 0.04894820799999988, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 1, "total": 0.0402695420000001, "mean": 0.0402695420000001, "maximum": 0.0402695420000001, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 1, "total": 0.0004224159999999255, "mean": 0.0004224159999999255, "maximum": 0.0004224159999999255, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_magicvalues_multipleclauses/magicpopper/90/6/stats.json", "end": true, "__type__": "Stats"}