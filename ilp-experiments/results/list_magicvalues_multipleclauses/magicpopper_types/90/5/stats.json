{"log_best_programs": true, "num_literals": 0, "total_programs": 8, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.00039916699999986704, 0.0006242080000000705, 0.0014697919999999698, 0.001226584000000086, 0.0021435839999999207, 0.0008155410000001417, 0.0005737089999997558, 0.0010957920000000954, 0.0004174169999999755], "find_bindings_prolog": [0.03654625, 0.03502824999999987, 0.13308170799999997, 0.15358529200000004, 0.14493370900000002, 0.1400328329999998], "test": [0.044451083, 0.04692375000000015, 0.018988208999999978, 0.1335202499999999, 0.15415466599999994, 0.14527291699999978, 0.14036820900000002, 0.020150500000000182], "combine": [0.10371583299999987, 0.00642933400000012, 5.419999999922709e-07, 6.660000000380251e-07, 6.660000000380251e-07, 5.410000003536197e-07, 5.409999999095305e-07, 6.669999996766762e-07], "constrain": [0.0017447500000000726, 0.002493333999999958, 0.00042587499999990897, 0.0033747090000000313, 0.005597375000000238, 0.0016849159999998697, 0.0017018749999997418, 0.0019000829999997748]}, "final_exec_time": 2.103136334, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- head(A,dz),magic(dz).\nmagic_value(A):- head(A,qv),magic(qv).\nmagic_value(A):- head(A,cu),magic(cu).\nmagic_value(A):- head(A,cy),magic(cy).\nmagic_value(A):- head(A,hy),magic(hy).\nmagic_value(A):- head(A,gg),magic(gg).\nmagic_value(A):- head(A,pc),magic(pc).\nmagic_value(A):- head(A,rs),magic(rs).\nmagic_value(A):- head(A,m),magic(m).\nmagic_value(A):- head(A,hx),magic(hx).\nmagic_value(A):- head(A,gw),magic(gw).\nmagic_value(A):- head(A,hn),magic(hn).\nmagic_value(A):- head(A,ae),magic(ae).\nmagic_value(A):- head(A,qe),magic(qe).\nmagic_value(A):- head(A,jo),magic(jo).\nmagic_value(A):- head(A,bj),magic(bj).\nmagic_value(A):- head(A,ek),magic(ek).\nmagic_value(A):- head(A,cz),magic(cz).\nmagic_value(A):- head(A,ce),magic(ce).\nmagic_value(A):- head(A,ar),magic(ar).\nmagic_value(A):- head(A,fa),magic(fa).\nmagic_value(A):- head(A,an),magic(an).\nmagic_value(A):- head(A,lj),magic(lj).\nmagic_value(A):- head(A,mq),magic(mq).\nmagic_value(A):- head(A,rt),magic(rt).\nmagic_value(A):- head(A,mm),magic(mm).\nmagic_value(A):- head(A,qn),magic(qn).\nmagic_value(A):- head(A,ri),magic(ri).\nmagic_value(A):- head(A,bi),magic(bi).\nmagic_value(A):- head(A,dk),magic(dk).\nmagic_value(A):- head(A,oz),magic(oz).\nmagic_value(A):- head(A,cm),magic(cm).\nmagic_value(A):- head(A,hm),magic(hm).\nmagic_value(A):- head(A,ps),magic(ps).\nmagic_value(A):- head(A,hr),magic(hr).\nmagic_value(A):- head(A,rw),magic(rw).\nmagic_value(A):- head(A,qc),magic(qc).\nmagic_value(A):- head(A,rp),magic(rp).\nmagic_value(A):- head(A,kx),magic(kx).\nmagic_value(A):- head(A,at),magic(at).\nmagic_value(A):- head(A,cv),magic(cv).\nmagic_value(A):- head(A,gm),magic(gm).\nmagic_value(A):- head(A,j),magic(j).\nmagic_value(A):- head(A,pk),magic(pk).\nmagic_value(A):- head(A,pu),magic(pu).\nmagic_value(A):- head(A,ru),magic(ru).\nmagic_value(A):- head(A,nc),magic(nc).\nmagic_value(A):- head(A,du),magic(du).\nmagic_value(A):- head(A,cb),magic(cb).\nmagic_value(A):- head(A,db),magic(db).\nmagic_value(A):- head(A,gn),magic(gn).\nmagic_value(A):- head(A,gs),magic(gs).\nmagic_value(A):- head(A,km),magic(km).\nmagic_value(A):- head(A,oq),magic(oq).\nmagic_value(A):- head(A,mv),magic(mv).\nmagic_value(A):- head(A,ii),magic(ii).\nmagic_value(A):- head(A,fh),magic(fh).\nmagic_value(A):- head(A,pf),magic(pf).\nmagic_value(A):- head(A,ay),magic(ay).\nmagic_value(A):- head(A,kk),magic(kk).\nmagic_value(A):- head(A,l),magic(l).\nmagic_value(A):- head(A,oj),magic(oj).\nmagic_value(A):- head(A,n),magic(n).\nmagic_value(A):- head(A,ds),magic(ds).\nmagic_value(A):- head(A,le),magic(le).\nmagic_value(A):- head(A,hd),magic(hd).\nmagic_value(A):- head(A,ln),magic(ln).\nmagic_value(A):- head(A,pq),magic(pq).\nmagic_value(A):- head(A,ch),magic(ch).\nmagic_value(A):- head(A,fw),magic(fw).\nmagic_value(A):- head(A,nv),magic(nv).\nmagic_value(A):- head(A,of),magic(of).\nmagic_value(A):- head(A,hc),magic(hc).\nmagic_value(A):- head(A,es),magic(es).\nmagic_value(A):- head(A,gd),magic(gd).\nmagic_value(A):- head(A,nx),magic(nx).\nmagic_value(A):- head(A,sh),magic(sh).\nmagic_value(A):- head(A,mk),magic(mk).\nmagic_value(A):- head(A,qa),magic(qa).\nmagic_value(A):- head(A,mu),magic(mu).\nmagic_value(A):- head(A,nq),magic(nq).\nmagic_value(A):- head(A,kg),magic(kg).\nmagic_value(A):- head(A,gf),magic(gf).\nmagic_value(A):- head(A,u),magic(u).\nmagic_value(A):- head(A,ff),magic(ff).\nmagic_value(A):- head(A,gj),magic(gj).\nmagic_value(A):- head(A,on),magic(on).\nmagic_value(A):- head(A,be),magic(be).\nmagic_value(A):- head(A,ko),magic(ko).\nmagic_value(A):- head(A,lo),magic(lo).", "is_solution": true, "conf_matrix": [200, 0, 200, 0], "total_exec_time": 2.103133542, "durations": [{"operation": "Test", "called": 1, "total": 0.044451083, "mean": 0.044451083, "maximum": 0.044451083, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 1, "total": 0.03654625, "mean": 0.03654625, "maximum": 0.03654625, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 1, "total": 0.00039916699999986704, "mean": 0.00039916699999986704, "maximum": 0.00039916699999986704, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_magicvalues_multipleclauses/magicpopper/90/5/stats.json", "end": true, "__type__": "Stats"}