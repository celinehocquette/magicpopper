{"log_best_programs": true, "num_literals": 0, "total_programs": 8, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.00040908299999986575, 0.000580083000000009, 0.001343499999999942, 0.0012458340000001122, 0.0015154589999999413, 0.0003352910000002929, 0.0013844169999996936, 0.0006302499999999434, 0.001519249999999861], "find_bindings_prolog": [0.03542312499999989, 0.03461704200000004, 0.13869170899999994, 0.1449282500000002, 0.14604158300000014, 0.15899550000000007], "test": [0.04339716699999996, 0.04729441599999995, 0.019228875000000034, 0.13900725000000014, 0.14527445799999983, 0.019118250000000003, 0.14638233300000003, 0.1595083749999997], "combine": [0.09956624999999986, 0.0062367920000001575, 5.83000000053957e-07, 7.090000000431473e-07, 7.090000000431473e-07, 5.419999999922709e-07, 5.00000000069889e-07, 5.409999999095305e-07], "constrain": [0.0016984580000001248, 0.0023905420000001065, 0.0004252909999999943, 0.0031732090000000657, 0.0054339579999997945, 0.0017981250000000948, 0.0016836250000000774, 0.002122834000000129]}, "final_exec_time": 2.1600562500000002, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- head(A,jo),magic(jo).\nmagic_value(A):- head(A,nv),magic(nv).\nmagic_value(A):- head(A,du),magic(du).\nmagic_value(A):- head(A,cz),magic(cz).\nmagic_value(A):- head(A,rw),magic(rw).\nmagic_value(A):- head(A,cb),magic(cb).\nmagic_value(A):- head(A,mq),magic(mq).\nmagic_value(A):- head(A,cu),magic(cu).\nmagic_value(A):- head(A,hx),magic(hx).\nmagic_value(A):- head(A,pk),magic(pk).\nmagic_value(A):- head(A,qa),magic(qa).\nmagic_value(A):- head(A,oj),magic(oj).\nmagic_value(A):- head(A,an),magic(an).\nmagic_value(A):- head(A,ay),magic(ay).\nmagic_value(A):- head(A,at),magic(at).\nmagic_value(A):- head(A,ar),magic(ar).\nmagic_value(A):- head(A,rp),magic(rp).\nmagic_value(A):- head(A,mk),magic(mk).\nmagic_value(A):- head(A,gj),magic(gj).\nmagic_value(A):- head(A,ii),magic(ii).\nmagic_value(A):- head(A,gf),magic(gf).\nmagic_value(A):- head(A,gn),magic(gn).\nmagic_value(A):- head(A,kk),magic(kk).\nmagic_value(A):- head(A,nc),magic(nc).\nmagic_value(A):- head(A,u),magic(u).\nmagic_value(A):- head(A,hm),magic(hm).\nmagic_value(A):- head(A,hd),magic(hd).\nmagic_value(A):- head(A,oq),magic(oq).\nmagic_value(A):- head(A,ps),magic(ps).\nmagic_value(A):- head(A,of),magic(of).\nmagic_value(A):- head(A,es),magic(es).\nmagic_value(A):- head(A,bi),magic(bi).\nmagic_value(A):- head(A,pc),magic(pc).\nmagic_value(A):- head(A,mv),magic(mv).\nmagic_value(A):- head(A,gd),magic(gd).\nmagic_value(A):- head(A,pq),magic(pq).\nmagic_value(A):- head(A,ln),magic(ln).\nmagic_value(A):- head(A,qc),magic(qc).\nmagic_value(A):- head(A,cv),magic(cv).\nmagic_value(A):- head(A,rs),magic(rs).\nmagic_value(A):- head(A,bj),magic(bj).\nmagic_value(A):- head(A,ce),magic(ce).\nmagic_value(A):- head(A,hc),magic(hc).\nmagic_value(A):- head(A,kg),magic(kg).\nmagic_value(A):- head(A,lj),magic(lj).\nmagic_value(A):- head(A,hr),magic(hr).\nmagic_value(A):- head(A,nq),magic(nq).\nmagic_value(A):- head(A,hn),magic(hn).\nmagic_value(A):- head(A,ri),magic(ri).\nmagic_value(A):- head(A,lo),magic(lo).\nmagic_value(A):- head(A,fw),magic(fw).\nmagic_value(A):- head(A,ru),magic(ru).\nmagic_value(A):- head(A,qv),magic(qv).\nmagic_value(A):- head(A,ds),magic(ds).\nmagic_value(A):- head(A,le),magic(le).\nmagic_value(A):- head(A,dk),magic(dk).\nmagic_value(A):- head(A,on),magic(on).\nmagic_value(A):- head(A,dz),magic(dz).\nmagic_value(A):- head(A,fa),magic(fa).\nmagic_value(A):- head(A,gs),magic(gs).\nmagic_value(A):- head(A,mu),magic(mu).\nmagic_value(A):- head(A,sh),magic(sh).\nmagic_value(A):- head(A,kx),magic(kx).\nmagic_value(A):- head(A,gg),magic(gg).\nmagic_value(A):- head(A,pu),magic(pu).\nmagic_value(A):- head(A,ko),magic(ko).\nmagic_value(A):- head(A,km),magic(km).\nmagic_value(A):- head(A,hy),magic(hy).\nmagic_value(A):- head(A,ch),magic(ch).\nmagic_value(A):- head(A,j),magic(j).\nmagic_value(A):- head(A,mm),magic(mm).\nmagic_value(A):- head(A,pf),magic(pf).\nmagic_value(A):- head(A,fh),magic(fh).\nmagic_value(A):- head(A,m),magic(m).\nmagic_value(A):- head(A,qn),magic(qn).\nmagic_value(A):- head(A,db),magic(db).\nmagic_value(A):- head(A,ae),magic(ae).\nmagic_value(A):- head(A,ff),magic(ff).\nmagic_value(A):- head(A,rt),magic(rt).\nmagic_value(A):- head(A,oz),magic(oz).\nmagic_value(A):- head(A,be),magic(be).\nmagic_value(A):- head(A,ek),magic(ek).\nmagic_value(A):- head(A,l),magic(l).\nmagic_value(A):- head(A,n),magic(n).\nmagic_value(A):- head(A,gw),magic(gw).\nmagic_value(A):- head(A,nx),magic(nx).\nmagic_value(A):- head(A,cy),magic(cy).\nmagic_value(A):- head(A,qe),magic(qe).\nmagic_value(A):- head(A,cm),magic(cm).\nmagic_value(A):- head(A,gm),magic(gm).", "is_solution": true, "conf_matrix": [200, 0, 200, 0], "total_exec_time": 2.160053584, "durations": [{"operation": "Test", "called": 1, "total": 0.04339716699999996, "mean": 0.04339716699999996, "maximum": 0.04339716699999996, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 1, "total": 0.03542312499999989, "mean": 0.03542312499999989, "maximum": 0.03542312499999989, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 1, "total": 0.00040908299999986575, "mean": 0.00040908299999986575, "maximum": 0.00040908299999986575, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_magicvalues_multipleclauses/magicpopper/90/8/stats.json", "end": true, "__type__": "Stats"}