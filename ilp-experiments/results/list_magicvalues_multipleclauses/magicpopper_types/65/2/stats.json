{"log_best_programs": true, "num_literals": 0, "total_programs": 8, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.0003830419999999446, 0.0006307080000000909, 0.0014966250000001402, 0.0015399579999999524, 0.0019108750000000896, 0.0007600840000001607, 0.001060791999999644, 0.0010588330000000923, 0.001040791999999957], "find_bindings_prolog": [0.030098249999999993, 0.03294445800000001, 0.14631925000000012, 0.15258358299999997, 0.1576505410000002, 0.15518237499999987], "test": [0.035972375000000056, 0.04482604200000018, 0.01902262499999985, 0.14663683299999986, 0.018382542000000113, 0.15292212500000013, 0.15816266599999995, 0.15553741700000012], "combine": [0.077378167, 0.005954624999999991, 5.840000001366974e-07, 6.249999999763389e-07, 7.089999998211027e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.00000000069889e-07], "constrain": [0.0019716250000001434, 0.002403582999999987, 0.00042708299999993926, 0.003071792000000073, 0.0005355420000001665, 0.005416124999999994, 0.0053758329999999965, 0.001731250000000184]}, "final_exec_time": 2.180557833, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- head(A,og),magic(og).\nmagic_value(A):- head(A,fj),magic(fj).\nmagic_value(A):- head(A,oi),magic(oi).\nmagic_value(A):- head(A,ix),magic(ix).\nmagic_value(A):- head(A,ow),magic(ow).\nmagic_value(A):- head(A,ew),magic(ew).\nmagic_value(A):- head(A,ev),magic(ev).\nmagic_value(A):- head(A,ns),magic(ns).\nmagic_value(A):- head(A,dr),magic(dr).\nmagic_value(A):- head(A,gv),magic(gv).\nmagic_value(A):- head(A,mu),magic(mu).\nmagic_value(A):- head(A,rw),magic(rw).\nmagic_value(A):- head(A,ae),magic(ae).\nmagic_value(A):- head(A,lh),magic(lh).\nmagic_value(A):- head(A,iu),magic(iu).\nmagic_value(A):- head(A,pn),magic(pn).\nmagic_value(A):- head(A,rj),magic(rj).\nmagic_value(A):- head(A,dh),magic(dh).\nmagic_value(A):- head(A,x),magic(x).\nmagic_value(A):- head(A,av),magic(av).\nmagic_value(A):- head(A,sg),magic(sg).\nmagic_value(A):- head(A,qh),magic(qh).\nmagic_value(A):- head(A,nv),magic(nv).\nmagic_value(A):- head(A,jl),magic(jl).\nmagic_value(A):- head(A,cl),magic(cl).\nmagic_value(A):- head(A,ii),magic(ii).\nmagic_value(A):- head(A,hy),magic(hy).\nmagic_value(A):- head(A,ds),magic(ds).\nmagic_value(A):- head(A,dx),magic(dx).\nmagic_value(A):- head(A,ll),magic(ll).\nmagic_value(A):- head(A,on),magic(on).\nmagic_value(A):- head(A,kk),magic(kk).\nmagic_value(A):- head(A,gs),magic(gs).\nmagic_value(A):- head(A,rr),magic(rr).\nmagic_value(A):- head(A,kh),magic(kh).\nmagic_value(A):- head(A,or),magic(or).\nmagic_value(A):- head(A,my),magic(my).\nmagic_value(A):- head(A,ql),magic(ql).\nmagic_value(A):- head(A,sd),magic(sd).\nmagic_value(A):- head(A,cu),magic(cu).\nmagic_value(A):- head(A,jd),magic(jd).\nmagic_value(A):- head(A,pm),magic(pm).\nmagic_value(A):- head(A,mb),magic(mb).\nmagic_value(A):- head(A,gm),magic(gm).\nmagic_value(A):- head(A,ka),magic(ka).\nmagic_value(A):- head(A,lx),magic(lx).\nmagic_value(A):- head(A,mn),magic(mn).\nmagic_value(A):- head(A,ip),magic(ip).\nmagic_value(A):- head(A,np),magic(np).\nmagic_value(A):- head(A,hx),magic(hx).\nmagic_value(A):- head(A,md),magic(md).\nmagic_value(A):- head(A,kz),magic(kz).\nmagic_value(A):- head(A,ou),magic(ou).\nmagic_value(A):- head(A,o),magic(o).\nmagic_value(A):- head(A,br),magic(br).\nmagic_value(A):- head(A,bx),magic(bx).\nmagic_value(A):- head(A,du),magic(du).\nmagic_value(A):- head(A,de),magic(de).\nmagic_value(A):- head(A,nh),magic(nh).\nmagic_value(A):- head(A,em),magic(em).\nmagic_value(A):- head(A,gl),magic(gl).\nmagic_value(A):- head(A,py),magic(py).\nmagic_value(A):- head(A,ig),magic(ig).\nmagic_value(A):- head(A,co),magic(co).\nmagic_value(A):- head(A,fm),magic(fm).", "is_solution": true, "conf_matrix": [200, 0, 200, 0], "total_exec_time": 2.180555041, "durations": [{"operation": "Test", "called": 1, "total": 0.035972375000000056, "mean": 0.035972375000000056, "maximum": 0.035972375000000056, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 1, "total": 0.030098249999999993, "mean": 0.030098249999999993, "maximum": 0.030098249999999993, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 1, "total": 0.0003830419999999446, "mean": 0.0003830419999999446, "maximum": 0.0003830419999999446, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_magicvalues_multipleclauses/magicpopper/65/2/stats.json", "end": true, "__type__": "Stats"}