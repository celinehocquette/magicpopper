{"log_best_programs": true, "num_literals": 0, "total_programs": 8, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.00039666599999987895, 0.0005719170000000329, 0.0013627499999999682, 0.0012368750000000261, 0.001498541000000131, 0.00029770800000017417, 0.0014116669999997278, 0.0006772079999999292, 0.0014781249999997748], "find_bindings_prolog": [0.02971691700000001, 0.03485249999999995, 0.13789808300000006, 0.14550266699999992, 0.14838245900000002, 0.16193254199999974], "test": [0.035384584, 0.047621334000000015, 0.01892433299999996, 0.13820762499999995, 0.14583866700000003, 0.018422666999999837, 0.14871775000000031, 0.16247154200000002], "combine": [0.08278020799999997, 0.005501415999999981, 5.419999999922709e-07, 6.669999998987208e-07, 5.830000002760016e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.829999998319124e-07], "constrain": [0.0017610829999998856, 0.002460124999999813, 0.0004186660000000675, 0.00306854099999998, 0.0052056249999998805, 0.0005248749999999802, 0.0017984579999996697, 0.0021307919999999925]}, "final_exec_time": 2.135725708, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- head(A,ix),magic(ix).\nmagic_value(A):- head(A,dr),magic(dr).\nmagic_value(A):- head(A,ip),magic(ip).\nmagic_value(A):- head(A,hy),magic(hy).\nmagic_value(A):- head(A,cu),magic(cu).\nmagic_value(A):- head(A,og),magic(og).\nmagic_value(A):- head(A,py),magic(py).\nmagic_value(A):- head(A,qh),magic(qh).\nmagic_value(A):- head(A,ow),magic(ow).\nmagic_value(A):- head(A,ll),magic(ll).\nmagic_value(A):- head(A,gm),magic(gm).\nmagic_value(A):- head(A,pm),magic(pm).\nmagic_value(A):- head(A,de),magic(de).\nmagic_value(A):- head(A,np),magic(np).\nmagic_value(A):- head(A,ev),magic(ev).\nmagic_value(A):- head(A,du),magic(du).\nmagic_value(A):- head(A,kk),magic(kk).\nmagic_value(A):- head(A,ig),magic(ig).\nmagic_value(A):- head(A,fj),magic(fj).\nmagic_value(A):- head(A,rw),magic(rw).\nmagic_value(A):- head(A,rr),magic(rr).\nmagic_value(A):- head(A,nv),magic(nv).\nmagic_value(A):- head(A,nh),magic(nh).\nmagic_value(A):- head(A,kz),magic(kz).\nmagic_value(A):- head(A,x),magic(x).\nmagic_value(A):- head(A,jd),magic(jd).\nmagic_value(A):- head(A,ds),magic(ds).\nmagic_value(A):- head(A,mb),magic(mb).\nmagic_value(A):- head(A,gv),magic(gv).\nmagic_value(A):- head(A,sd),magic(sd).\nmagic_value(A):- head(A,gs),magic(gs).\nmagic_value(A):- head(A,md),magic(md).\nmagic_value(A):- head(A,ns),magic(ns).\nmagic_value(A):- head(A,fm),magic(fm).\nmagic_value(A):- head(A,rj),magic(rj).\nmagic_value(A):- head(A,or),magic(or).\nmagic_value(A):- head(A,mu),magic(mu).\nmagic_value(A):- head(A,kh),magic(kh).\nmagic_value(A):- head(A,ii),magic(ii).\nmagic_value(A):- head(A,av),magic(av).\nmagic_value(A):- head(A,my),magic(my).\nmagic_value(A):- head(A,ew),magic(ew).\nmagic_value(A):- head(A,lx),magic(lx).\nmagic_value(A):- head(A,bx),magic(bx).\nmagic_value(A):- head(A,lh),magic(lh).\nmagic_value(A):- head(A,ql),magic(ql).\nmagic_value(A):- head(A,co),magic(co).\nmagic_value(A):- head(A,cl),magic(cl).\nmagic_value(A):- head(A,ou),magic(ou).\nmagic_value(A):- head(A,o),magic(o).\nmagic_value(A):- head(A,br),magic(br).\nmagic_value(A):- head(A,mn),magic(mn).\nmagic_value(A):- head(A,dh),magic(dh).\nmagic_value(A):- head(A,em),magic(em).\nmagic_value(A):- head(A,ae),magic(ae).\nmagic_value(A):- head(A,gl),magic(gl).\nmagic_value(A):- head(A,sg),magic(sg).\nmagic_value(A):- head(A,pn),magic(pn).\nmagic_value(A):- head(A,iu),magic(iu).\nmagic_value(A):- head(A,ka),magic(ka).\nmagic_value(A):- head(A,jl),magic(jl).\nmagic_value(A):- head(A,on),magic(on).\nmagic_value(A):- head(A,dx),magic(dx).\nmagic_value(A):- head(A,hx),magic(hx).\nmagic_value(A):- head(A,oi),magic(oi).", "is_solution": true, "conf_matrix": [200, 0, 200, 0], "total_exec_time": 2.1357226669999996, "durations": [{"operation": "Test", "called": 1, "total": 0.035384584, "mean": 0.035384584, "maximum": 0.035384584, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 1, "total": 0.02971691700000001, "mean": 0.02971691700000001, "maximum": 0.02971691700000001, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 1, "total": 0.00039666599999987895, "mean": 0.00039666599999987895, "maximum": 0.00039666599999987895, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_magicvalues_multipleclauses/magicpopper/65/1/stats.json", "end": true, "__type__": "Stats"}