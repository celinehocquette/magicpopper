{"log_best_programs": true, "num_literals": 0, "total_programs": 8, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.00041383299999986356, 0.0007055000000000256, 0.0014639169999999257, 0.001210834000000105, 0.0018862080000001669, 0.0010432500000003841, 0.0007424160000000235, 0.0013663329999999974, 0.0007376670000001084], "find_bindings_prolog": [0.035809083999999824, 0.0337762909999999, 0.14544999999999986, 0.1590570419999997, 0.16170679199999993, 0.169826209], "test": [0.04308737500000004, 0.0462054999999999, 0.019497834000000047, 0.1457695830000001, 0.020351666999999907, 0.1594269589999997, 0.16221270799999976, 0.1701772079999997], "combine": [0.09919591700000008, 0.01072408299999994, 6.669999998987208e-07, 7.500000003268781e-07, 7.499999998827889e-07, 6.659999995939359e-07, 5.00000000069889e-07, 5.419999999922709e-07], "constrain": [0.0017464160000000284, 0.0023658749999999618, 0.0004529159999999699, 0.0031570419999997767, 0.0019067079999999237, 0.0052292920000001075, 0.0018414999999998294, 0.0018321249999999623]}, "final_exec_time": 2.3957257499999995, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- head(A,me),magic(me).\nmagic_value(A):- head(A,ju),magic(ju).\nmagic_value(A):- head(A,r),magic(r).\nmagic_value(A):- head(A,cp),magic(cp).\nmagic_value(A):- tail(A,B),head(B,du),magic(du).\nmagic_value(A):- head(A,pm),magic(pm).\nmagic_value(A):- head(A,c),magic(c).\nmagic_value(A):- head(A,jb),magic(jb).\nmagic_value(A):- head(A,ak),magic(ak).\nmagic_value(A):- head(A,jq),magic(jq).\nmagic_value(A):- head(A,hl),magic(hl).\nmagic_value(A):- head(A,qf),magic(qf).\nmagic_value(A):- head(A,pw),magic(pw).\nmagic_value(A):- head(A,lz),magic(lz).\nmagic_value(A):- head(A,ih),magic(ih).\nmagic_value(A):- head(A,hv),magic(hv).\nmagic_value(A):- head(A,rr),magic(rr).\nmagic_value(A):- head(A,h),magic(h).\nmagic_value(A):- head(A,ni),magic(ni).\nmagic_value(A):- head(A,t),magic(t).\nmagic_value(A):- head(A,bs),magic(bs).\nmagic_value(A):- head(A,bx),magic(bx).\nmagic_value(A):- head(A,re),magic(re).\nmagic_value(A):- head(A,dy),magic(dy).\nmagic_value(A):- head(A,du),magic(du).\nmagic_value(A):- head(A,oa),magic(oa).\nmagic_value(A):- head(A,dd),magic(dd).\nmagic_value(A):- head(A,pa),magic(pa).\nmagic_value(A):- head(A,dj),magic(dj).\nmagic_value(A):- head(A,hd),magic(hd).\nmagic_value(A):- head(A,ay),magic(ay).\nmagic_value(A):- head(A,ex),magic(ex).\nmagic_value(A):- head(A,pu),magic(pu).\nmagic_value(A):- head(A,gg),magic(gg).\nmagic_value(A):- head(A,hr),magic(hr).\nmagic_value(A):- head(A,sh),magic(sh).\nmagic_value(A):- head(A,kn),magic(kn).\nmagic_value(A):- head(A,qv),magic(qv).\nmagic_value(A):- head(A,jn),magic(jn).\nmagic_value(A):- head(A,nw),magic(nw).\nmagic_value(A):- head(A,gw),magic(gw).\nmagic_value(A):- head(A,lv),magic(lv).\nmagic_value(A):- head(A,bc),magic(bc).\nmagic_value(A):- head(A,ib),magic(ib).\nmagic_value(A):- head(A,bh),magic(bh).\nmagic_value(A):- head(A,jp),magic(jp).\nmagic_value(A):- head(A,oo),magic(oo).\nmagic_value(A):- tail(A,B),head(B,qs),magic(qs).\nmagic_value(A):- head(A,sa),magic(sa).\nmagic_value(A):- head(A,pb),magic(pb).\nmagic_value(A):- head(A,av),magic(av).\nmagic_value(A):- head(A,jc),magic(jc).\nmagic_value(A):- head(A,gt),magic(gt).\nmagic_value(A):- head(A,lp),magic(lp).\nmagic_value(A):- head(A,qd),magic(qd).\nmagic_value(A):- head(A,ad),magic(ad).\nmagic_value(A):- head(A,ct),magic(ct).\nmagic_value(A):- head(A,qh),magic(qh).\nmagic_value(A):- head(A,ny),magic(ny).\nmagic_value(A):- head(A,an),magic(an).\nmagic_value(A):- head(A,hq),magic(hq).\nmagic_value(A):- head(A,go),magic(go).\nmagic_value(A):- head(A,df),magic(df).\nmagic_value(A):- head(A,he),magic(he).\nmagic_value(A):- head(A,ht),magic(ht).\nmagic_value(A):- head(A,sg),magic(sg).\nmagic_value(A):- head(A,ac),magic(ac).\nmagic_value(A):- head(A,pt),magic(pt).\nmagic_value(A):- head(A,mb),magic(mb).\nmagic_value(A):- head(A,gn),magic(gn).\nmagic_value(A):- head(A,rn),magic(rn).\nmagic_value(A):- head(A,cc),magic(cc).\nmagic_value(A):- head(A,jl),magic(jl).", "is_solution": true, "conf_matrix": [200, 0, 200, 0], "total_exec_time": 2.395722708, "durations": [{"operation": "Combine", "called": 1, "total": 0.09919591700000008, "mean": 0.09919591700000008, "maximum": 0.09919591700000008, "__type__": "DurationSummary"}, {"operation": "Test", "called": 2, "total": 0.08929287499999994, "mean": 0.04464643749999997, "maximum": 0.0462054999999999, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 2, "total": 0.06958537499999973, "mean": 0.034792687499999864, "maximum": 0.035809083999999824, "__type__": "DurationSummary"}, {"operation": "Constrain", "called": 1, "total": 0.0017464160000000284, "mean": 0.0017464160000000284, "maximum": 0.0017464160000000284, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 2, "total": 0.0011193329999998891, "mean": 0.0005596664999999446, "maximum": 0.0007055000000000256, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_magicvalues_multipleclauses/magicpopper/75/7/stats.json", "end": true, "__type__": "Stats"}