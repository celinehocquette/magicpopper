{"log_best_programs": true, "num_literals": 0, "total_programs": 8, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.0003828749999998937, 0.0004966250000000283, 0.0013227919999998505, 0.0010739170000000353, 0.0014484999999999637, 0.0008917920000000024, 0.000585957999999831, 0.0008460829999998865, 0.001553125000000044], "find_bindings_prolog": [0.02947095799999988, 0.03379108299999989, 0.13997824999999997, 0.16582687499999982, 0.14810495899999987, 0.14721129200000016], "test": [0.03498562500000002, 0.04635954200000003, 0.01968766699999991, 0.1403012920000002, 0.16633483299999985, 0.14844812499999982, 0.0197203749999999, 0.14755941700000008], "combine": [0.06943720800000008, 0.005579082999999985, 5.419999999922709e-07, 6.669999998987208e-07, 6.250000001983835e-07, 5.00000000069889e-07, 5.829999998319124e-07, 5.830000002760016e-07], "constrain": [0.0018863330000000733, 0.0023510420000001364, 0.000420958999999943, 0.003125040999999884, 0.005646041999999962, 0.00519000000000025, 0.0005327500000000818, 0.0016919170000000427]}, "final_exec_time": 2.195338541, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- head(A,rs),magic(rs).\nmagic_value(A):- head(A,ph),magic(ph).\nmagic_value(A):- head(A,cf),magic(cf).\nmagic_value(A):- head(A,gj),magic(gj).\nmagic_value(A):- head(A,dh),magic(dh).\nmagic_value(A):- head(A,if),magic(if).\nmagic_value(A):- head(A,hd),magic(hd).\nmagic_value(A):- head(A,bi),magic(bi).\nmagic_value(A):- head(A,fk),magic(fk).\nmagic_value(A):- head(A,ag),magic(ag).\nmagic_value(A):- head(A,da),magic(da).\nmagic_value(A):- head(A,ih),magic(ih).\nmagic_value(A):- head(A,ol),magic(ol).\nmagic_value(A):- head(A,kh),magic(kh).\nmagic_value(A):- head(A,no),magic(no).\nmagic_value(A):- head(A,cp),magic(cp).\nmagic_value(A):- head(A,gl),magic(gl).\nmagic_value(A):- head(A,lt),magic(lt).\nmagic_value(A):- head(A,lz),magic(lz).\nmagic_value(A):- head(A,lo),magic(lo).\nmagic_value(A):- head(A,rm),magic(rm).\nmagic_value(A):- head(A,iy),magic(iy).\nmagic_value(A):- head(A,dg),magic(dg).\nmagic_value(A):- head(A,pp),magic(pp).\nmagic_value(A):- head(A,hk),magic(hk).\nmagic_value(A):- head(A,cg),magic(cg).\nmagic_value(A):- head(A,au),magic(au).\nmagic_value(A):- head(A,oa),magic(oa).\nmagic_value(A):- head(A,be),magic(be).\nmagic_value(A):- head(A,i),magic(i).\nmagic_value(A):- head(A,fd),magic(fd).\nmagic_value(A):- head(A,z),magic(z).\nmagic_value(A):- head(A,jx),magic(jx).\nmagic_value(A):- head(A,go),magic(go).\nmagic_value(A):- head(A,ip),magic(ip).\nmagic_value(A):- head(A,f),magic(f).\nmagic_value(A):- head(A,jg),magic(jg).\nmagic_value(A):- head(A,gp),magic(gp).\nmagic_value(A):- head(A,ry),magic(ry).\nmagic_value(A):- head(A,et),magic(et).\nmagic_value(A):- head(A,gs),magic(gs).\nmagic_value(A):- head(A,lg),magic(lg).\nmagic_value(A):- head(A,bk),magic(bk).\nmagic_value(A):- head(A,id),magic(id).\nmagic_value(A):- head(A,b),magic(b).\nmagic_value(A):- head(A,gu),magic(gu).\nmagic_value(A):- head(A,pz),magic(pz).\nmagic_value(A):- head(A,aw),magic(aw).\nmagic_value(A):- head(A,ic),magic(ic).\nmagic_value(A):- head(A,cy),magic(cy).\nmagic_value(A):- head(A,fr),magic(fr).\nmagic_value(A):- head(A,cj),magic(cj).\nmagic_value(A):- head(A,kj),magic(kj).\nmagic_value(A):- head(A,fy),magic(fy).\nmagic_value(A):- head(A,gy),magic(gy).\nmagic_value(A):- head(A,sc),magic(sc).\nmagic_value(A):- head(A,bj),magic(bj).\nmagic_value(A):- head(A,ej),magic(ej).\nmagic_value(A):- head(A,ln),magic(ln).\nmagic_value(A):- head(A,ld),magic(ld).", "is_solution": true, "conf_matrix": [200, 0, 200, 0], "total_exec_time": 2.195336041, "durations": [{"operation": "Test", "called": 1, "total": 0.03498562500000002, "mean": 0.03498562500000002, "maximum": 0.03498562500000002, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 1, "total": 0.02947095799999988, "mean": 0.02947095799999988, "maximum": 0.02947095799999988, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 1, "total": 0.0003828749999998937, "mean": 0.0003828749999998937, "maximum": 0.0003828749999998937, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_magicvalues_multipleclauses/magicpopper/60/7/stats.json", "end": true, "__type__": "Stats"}