{"log_best_programs": true, "num_literals": 0, "total_programs": 8, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.0003955420000001375, 0.0006365409999999905, 0.001154917000000033, 0.0016720000000001178, 0.002173957999999976, 0.0008685829999999228, 0.0010272920000002905, 0.00043933400000017997, 0.000533957999999668], "find_bindings_prolog": [0.029308041000000173, 0.033894250000000126, 0.13177600000000012, 0.1411820410000002, 0.1365209580000002, 0.14909433399999994], "test": [0.03479570800000009, 0.04662845900000012, 0.01914541599999997, 0.132086959, 0.018384084000000023, 0.14152275000000003, 0.13686679200000018, 0.1496063750000003], "combine": [0.07778483299999994, 0.006233415999999936, 6.249999999763389e-07, 7.07999999960407e-07, 7.500000001048335e-07, 5.00000000069889e-07, 5.00000000069889e-07, 5.419999999922709e-07], "constrain": [0.0018547079999999827, 0.0024779999999999802, 0.00042758300000000915, 0.0031016249999999967, 0.0019017500000000354, 0.005265708000000036, 0.0017083750000002063, 0.005669875000000157]}, "final_exec_time": 2.077969625, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- head(A,fy),magic(fy).\nmagic_value(A):- head(A,ol),magic(ol).\nmagic_value(A):- head(A,fd),magic(fd).\nmagic_value(A):- head(A,gy),magic(gy).\nmagic_value(A):- head(A,hk),magic(hk).\nmagic_value(A):- head(A,kh),magic(kh).\nmagic_value(A):- head(A,da),magic(da).\nmagic_value(A):- head(A,oa),magic(oa).\nmagic_value(A):- head(A,gu),magic(gu).\nmagic_value(A):- head(A,id),magic(id).\nmagic_value(A):- head(A,jx),magic(jx).\nmagic_value(A):- head(A,z),magic(z).\nmagic_value(A):- head(A,lt),magic(lt).\nmagic_value(A):- head(A,bk),magic(bk).\nmagic_value(A):- head(A,f),magic(f).\nmagic_value(A):- head(A,ih),magic(ih).\nmagic_value(A):- head(A,ic),magic(ic).\nmagic_value(A):- head(A,cy),magic(cy).\nmagic_value(A):- head(A,ej),magic(ej).\nmagic_value(A):- head(A,hd),magic(hd).\nmagic_value(A):- head(A,i),magic(i).\nmagic_value(A):- head(A,cj),magic(cj).\nmagic_value(A):- head(A,dh),magic(dh).\nmagic_value(A):- head(A,ry),magic(ry).\nmagic_value(A):- head(A,sc),magic(sc).\nmagic_value(A):- head(A,aw),magic(aw).\nmagic_value(A):- head(A,ph),magic(ph).\nmagic_value(A):- head(A,cg),magic(cg).\nmagic_value(A):- head(A,gl),magic(gl).\nmagic_value(A):- head(A,jg),magic(jg).\nmagic_value(A):- head(A,ld),magic(ld).\nmagic_value(A):- head(A,pp),magic(pp).\nmagic_value(A):- head(A,gj),magic(gj).\nmagic_value(A):- head(A,fk),magic(fk).\nmagic_value(A):- head(A,iy),magic(iy).\nmagic_value(A):- head(A,bi),magic(bi).\nmagic_value(A):- head(A,cf),magic(cf).\nmagic_value(A):- head(A,go),magic(go).\nmagic_value(A):- head(A,dg),magic(dg).\nmagic_value(A):- head(A,et),magic(et).\nmagic_value(A):- head(A,ln),magic(ln).\nmagic_value(A):- head(A,b),magic(b).\nmagic_value(A):- head(A,lo),magic(lo).\nmagic_value(A):- head(A,au),magic(au).\nmagic_value(A):- head(A,lg),magic(lg).\nmagic_value(A):- head(A,ag),magic(ag).\nmagic_value(A):- head(A,gp),magic(gp).\nmagic_value(A):- head(A,rs),magic(rs).\nmagic_value(A):- head(A,kj),magic(kj).\nmagic_value(A):- head(A,ip),magic(ip).\nmagic_value(A):- head(A,pz),magic(pz).\nmagic_value(A):- head(A,lz),magic(lz).\nmagic_value(A):- head(A,bj),magic(bj).\nmagic_value(A):- head(A,rm),magic(rm).\nmagic_value(A):- head(A,cp),magic(cp).\nmagic_value(A):- head(A,be),magic(be).\nmagic_value(A):- head(A,no),magic(no).\nmagic_value(A):- head(A,gs),magic(gs).\nmagic_value(A):- head(A,fr),magic(fr).\nmagic_value(A):- head(A,if),magic(if).", "is_solution": true, "conf_matrix": [200, 0, 200, 0], "total_exec_time": 2.077966791, "durations": [{"operation": "Test", "called": 1, "total": 0.03479570800000009, "mean": 0.03479570800000009, "maximum": 0.03479570800000009, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 1, "total": 0.029308041000000173, "mean": 0.029308041000000173, "maximum": 0.029308041000000173, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 1, "total": 0.0003955420000001375, "mean": 0.0003955420000001375, "maximum": 0.0003955420000001375, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_magicvalues_multipleclauses/magicpopper/60/8/stats.json", "end": true, "__type__": "Stats"}