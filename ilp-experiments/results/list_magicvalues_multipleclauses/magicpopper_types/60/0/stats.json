{"log_best_programs": true, "num_literals": 0, "total_programs": 8, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.0004555420000000865, 0.0005670420000001286, 0.0015153340000000348, 0.001359832999999977, 0.0012649580000001492, 0.0007059999999996514, 0.0014903750000003768, 0.0010219170000000943, 0.0005474579999997786], "find_bindings_prolog": [0.029958958000000147, 0.03908404199999982, 0.15635025000000002, 0.16986754199999998, 0.17264466700000014, 0.1678567919999998], "test": [0.036432790999999964, 0.052235750000000136, 0.01971162500000001, 0.1566737079999998, 0.17027058299999975, 0.022513250000000262, 0.17316891699999992, 0.16820020800000002], "combine": [0.07166541699999995, 0.005662500000000126, 5.83000000053957e-07, 7.090000000431473e-07, 6.660000000380251e-07, 6.249999997542943e-07, 5.00000000069889e-07, 5.00000000069889e-07], "constrain": [0.0020730829999999756, 0.0024556249999998503, 0.0004967500000001568, 0.0037777089999999625, 0.005275459000000371, 0.0020293340000003823, 0.0059752499999996544, 0.0018074590000001223]}, "final_exec_time": 2.348218333, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- head(A,ip),magic(ip).\nmagic_value(A):- head(A,hd),magic(hd).\nmagic_value(A):- head(A,oa),magic(oa).\nmagic_value(A):- head(A,dh),magic(dh).\nmagic_value(A):- head(A,au),magic(au).\nmagic_value(A):- head(A,fr),magic(fr).\nmagic_value(A):- head(A,if),magic(if).\nmagic_value(A):- head(A,rm),magic(rm).\nmagic_value(A):- head(A,id),magic(id).\nmagic_value(A):- head(A,ln),magic(ln).\nmagic_value(A):- head(A,fy),magic(fy).\nmagic_value(A):- head(A,cf),magic(cf).\nmagic_value(A):- head(A,bj),magic(bj).\nmagic_value(A):- head(A,lo),magic(lo).\nmagic_value(A):- head(A,ry),magic(ry).\nmagic_value(A):- head(A,go),magic(go).\nmagic_value(A):- head(A,i),magic(i).\nmagic_value(A):- head(A,cy),magic(cy).\nmagic_value(A):- head(A,gs),magic(gs).\nmagic_value(A):- head(A,jx),magic(jx).\nmagic_value(A):- head(A,dg),magic(dg).\nmagic_value(A):- head(A,fd),magic(fd).\nmagic_value(A):- head(A,lt),magic(lt).\nmagic_value(A):- head(A,da),magic(da).\nmagic_value(A):- head(A,be),magic(be).\nmagic_value(A):- head(A,gj),magic(gj).\nmagic_value(A):- head(A,cg),magic(cg).\nmagic_value(A):- head(A,kh),magic(kh).\nmagic_value(A):- head(A,z),magic(z).\nmagic_value(A):- head(A,jg),magic(jg).\nmagic_value(A):- head(A,ol),magic(ol).\nmagic_value(A):- head(A,hk),magic(hk).\nmagic_value(A):- head(A,pz),magic(pz).\nmagic_value(A):- head(A,ic),magic(ic).\nmagic_value(A):- head(A,b),magic(b).\nmagic_value(A):- head(A,gy),magic(gy).\nmagic_value(A):- head(A,ag),magic(ag).\nmagic_value(A):- head(A,sc),magic(sc).\nmagic_value(A):- head(A,gp),magic(gp).\nmagic_value(A):- head(A,lg),magic(lg).\nmagic_value(A):- head(A,cj),magic(cj).\nmagic_value(A):- head(A,f),magic(f).\nmagic_value(A):- head(A,aw),magic(aw).\nmagic_value(A):- head(A,iy),magic(iy).\nmagic_value(A):- head(A,pp),magic(pp).\nmagic_value(A):- head(A,ej),magic(ej).\nmagic_value(A):- head(A,no),magic(no).\nmagic_value(A):- head(A,gu),magic(gu).\nmagic_value(A):- head(A,rs),magic(rs).\nmagic_value(A):- head(A,fk),magic(fk).\nmagic_value(A):- head(A,cp),magic(cp).\nmagic_value(A):- head(A,et),magic(et).\nmagic_value(A):- head(A,ld),magic(ld).\nmagic_value(A):- head(A,ih),magic(ih).\nmagic_value(A):- head(A,bk),magic(bk).\nmagic_value(A):- head(A,gl),magic(gl).\nmagic_value(A):- head(A,kj),magic(kj).\nmagic_value(A):- head(A,lz),magic(lz).\nmagic_value(A):- head(A,bi),magic(bi).\nmagic_value(A):- head(A,ph),magic(ph).", "is_solution": true, "conf_matrix": [200, 0, 200, 0], "total_exec_time": 2.348175375, "durations": [{"operation": "Test", "called": 1, "total": 0.036432790999999964, "mean": 0.036432790999999964, "maximum": 0.036432790999999964, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 1, "total": 0.029958958000000147, "mean": 0.029958958000000147, "maximum": 0.029958958000000147, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 1, "total": 0.0004555420000000865, "mean": 0.0004555420000000865, "maximum": 0.0004555420000000865, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_magicvalues_multipleclauses/magicpopper/60/0/stats.json", "end": true, "__type__": "Stats"}