{"log_best_programs": true, "num_literals": 0, "total_programs": 8, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.00038733300000015625, 0.0005826670000002032, 0.001465790999999994, 0.001255250000000041, 0.0015024999999999622, 0.0005865830000000294, 0.0009262500000000173, 0.0013307080000002358, 0.0014920419999997492], "find_bindings_prolog": [0.034337290999999937, 0.03316016700000013, 0.14420891699999983, 0.15156350000000018, 0.15860987500000023, 0.1471445], "test": [0.04199758399999998, 0.04544791699999995, 0.019878791000000007, 0.14453066600000009, 0.15190441600000004, 0.019480625000000362, 0.1591545000000001, 0.14748379099999998], "combine": [0.09789300000000001, 0.0057241660000000305, 6.249999999763389e-07, 7.07999999960407e-07, 7.080000004044962e-07, 5.829999998319124e-07, 5.00000000069889e-07, 5.00000000069889e-07], "constrain": [0.0018037500000001039, 0.0024833749999999544, 0.00043841700000002426, 0.0030698749999999997, 0.0054572920000000025, 0.0005645000000003009, 0.0018407499999999466, 0.001658667000000058]}, "final_exec_time": 2.182521917, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- head(A,qt),magic(qt).\nmagic_value(A):- head(A,gu),magic(gu).\nmagic_value(A):- head(A,sh),magic(sh).\nmagic_value(A):- head(A,bi),magic(bi).\nmagic_value(A):- head(A,ox),magic(ox).\nmagic_value(A):- head(A,bn),magic(bn).\nmagic_value(A):- head(A,ks),magic(ks).\nmagic_value(A):- head(A,db),magic(db).\nmagic_value(A):- head(A,oa),magic(oa).\nmagic_value(A):- head(A,mr),magic(mr).\nmagic_value(A):- head(A,k),magic(k).\nmagic_value(A):- head(A,ps),magic(ps).\nmagic_value(A):- head(A,dz),magic(dz).\nmagic_value(A):- head(A,mi),magic(mi).\nmagic_value(A):- head(A,ac),magic(ac).\nmagic_value(A):- head(A,bk),magic(bk).\nmagic_value(A):- head(A,fe),magic(fe).\nmagic_value(A):- head(A,jp),magic(jp).\nmagic_value(A):- head(A,gm),magic(gm).\nmagic_value(A):- head(A,cp),magic(cp).\nmagic_value(A):- head(A,c),magic(c).\nmagic_value(A):- head(A,eu),magic(eu).\nmagic_value(A):- head(A,ou),magic(ou).\nmagic_value(A):- head(A,lp),magic(lp).\nmagic_value(A):- head(A,eb),magic(eb).\nmagic_value(A):- head(A,hx),magic(hx).\nmagic_value(A):- head(A,ny),magic(ny).\nmagic_value(A):- head(A,cv),magic(cv).\nmagic_value(A):- head(A,nf),magic(nf).\nmagic_value(A):- head(A,ee),magic(ee).\nmagic_value(A):- head(A,qs),magic(qs).\nmagic_value(A):- head(A,ew),magic(ew).\nmagic_value(A):- head(A,jn),magic(jn).\nmagic_value(A):- head(A,np),magic(np).\nmagic_value(A):- head(A,pg),magic(pg).\nmagic_value(A):- head(A,oz),magic(oz).\nmagic_value(A):- head(A,fk),magic(fk).\nmagic_value(A):- head(A,iy),magic(iy).\nmagic_value(A):- head(A,lb),magic(lb).\nmagic_value(A):- head(A,co),magic(co).\nmagic_value(A):- head(A,hr),magic(hr).\nmagic_value(A):- head(A,kf),magic(kf).\nmagic_value(A):- head(A,ei),magic(ei).\nmagic_value(A):- head(A,io),magic(io).\nmagic_value(A):- head(A,jg),magic(jg).\nmagic_value(A):- head(A,ig),magic(ig).\nmagic_value(A):- head(A,hy),magic(hy).\nmagic_value(A):- head(A,de),magic(de).\nmagic_value(A):- head(A,eo),magic(eo).\nmagic_value(A):- head(A,pk),magic(pk).\nmagic_value(A):- head(A,ka),magic(ka).\nmagic_value(A):- head(A,ju),magic(ju).\nmagic_value(A):- head(A,nt),magic(nt).\nmagic_value(A):- head(A,lo),magic(lo).\nmagic_value(A):- head(A,gq),magic(gq).\nmagic_value(A):- head(A,qj),magic(qj).\nmagic_value(A):- head(A,ni),magic(ni).\nmagic_value(A):- head(A,ke),magic(ke).\nmagic_value(A):- head(A,dp),magic(dp).\nmagic_value(A):- head(A,jr),magic(jr).\nmagic_value(A):- head(A,ij),magic(ij).\nmagic_value(A):- head(A,cb),magic(cb).\nmagic_value(A):- head(A,rx),magic(rx).\nmagic_value(A):- head(A,fo),magic(fo).\nmagic_value(A):- head(A,dl),magic(dl).\nmagic_value(A):- head(A,bw),magic(bw).\nmagic_value(A):- head(A,ht),magic(ht).\nmagic_value(A):- head(A,bo),magic(bo).\nmagic_value(A):- head(A,gt),magic(gt).\nmagic_value(A):- head(A,qq),magic(qq).\nmagic_value(A):- head(A,og),magic(og).\nmagic_value(A):- head(A,pz),magic(pz).\nmagic_value(A):- head(A,ll),magic(ll).\nmagic_value(A):- head(A,sc),magic(sc).\nmagic_value(A):- head(A,sb),magic(sb).\nmagic_value(A):- head(A,es),magic(es).\nmagic_value(A):- head(A,ms),magic(ms).\nmagic_value(A):- head(A,ra),magic(ra).\nmagic_value(A):- head(A,dw),magic(dw).\nmagic_value(A):- head(A,dc),magic(dc).\nmagic_value(A):- head(A,qd),magic(qd).\nmagic_value(A):- head(A,im),magic(im).\nmagic_value(A):- head(A,fl),magic(fl).\nmagic_value(A):- head(A,mn),magic(mn).\nmagic_value(A):- head(A,qh),magic(qh).", "is_solution": true, "conf_matrix": [200, 0, 200, 0], "total_exec_time": 2.182519084, "durations": [{"operation": "Test", "called": 1, "total": 0.04199758399999998, "mean": 0.04199758399999998, "maximum": 0.04199758399999998, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 1, "total": 0.034337290999999937, "mean": 0.034337290999999937, "maximum": 0.034337290999999937, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 1, "total": 0.00038733300000015625, "mean": 0.00038733300000015625, "maximum": 0.00038733300000015625, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_magicvalues_multipleclauses/magicpopper/85/9/stats.json", "end": true, "__type__": "Stats"}