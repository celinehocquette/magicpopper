{"log_best_programs": true, "num_literals": 0, "total_programs": 8, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.00038325000000005716, 0.0005294170000000875, 0.0016877920000000213, 0.0010653330000001127, 0.0018381250000001348, 0.000831832999999893, 0.0010890840000001845, 0.0010282909999999035, 0.00018554100000001128], "find_bindings_prolog": [0.034940709000000014, 0.0341339169999999, 0.13211075000000005, 0.13964820899999997, 0.15238691699999984, 0.16025954200000037], "test": [0.04291699999999987, 0.04637350000000007, 0.019215917000000138, 0.13243500000000008, 0.14001729100000015, 0.15290462500000013, 0.16062354199999973, 0.020491874999999826], "combine": [0.10178045799999991, 0.006230291999999915, 5.419999999922709e-07, 7.920000000272154e-07, 7.500000003268781e-07, 5.409999999095305e-07, 5.410000003536197e-07, 5.409999999095305e-07], "constrain": [0.0019388329999998621, 0.0023512919999999493, 0.00043370800000008813, 0.0032707919999999113, 0.0056564589999998915, 0.005770582999999885, 0.0019268330000001832, 0.0018918750000000983]}, "final_exec_time": 2.1119733330000003, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- head(A,bk),magic(bk).\nmagic_value(A):- head(A,ox),magic(ox).\nmagic_value(A):- head(A,qd),magic(qd).\nmagic_value(A):- head(A,qt),magic(qt).\nmagic_value(A):- head(A,fl),magic(fl).\nmagic_value(A):- head(A,ac),magic(ac).\nmagic_value(A):- head(A,jp),magic(jp).\nmagic_value(A):- head(A,rx),magic(rx).\nmagic_value(A):- head(A,ra),magic(ra).\nmagic_value(A):- head(A,iy),magic(iy).\nmagic_value(A):- head(A,oz),magic(oz).\nmagic_value(A):- head(A,ee),magic(ee).\nmagic_value(A):- head(A,qh),magic(qh).\nmagic_value(A):- head(A,ke),magic(ke).\nmagic_value(A):- head(A,gu),magic(gu).\nmagic_value(A):- head(A,nt),magic(nt).\nmagic_value(A):- head(A,gt),magic(gt).\nmagic_value(A):- head(A,bn),magic(bn).\nmagic_value(A):- head(A,es),magic(es).\nmagic_value(A):- head(A,cb),magic(cb).\nmagic_value(A):- head(A,bi),magic(bi).\nmagic_value(A):- head(A,jn),magic(jn).\nmagic_value(A):- head(A,dc),magic(dc).\nmagic_value(A):- head(A,gq),magic(gq).\nmagic_value(A):- head(A,hy),magic(hy).\nmagic_value(A):- head(A,qq),magic(qq).\nmagic_value(A):- head(A,jr),magic(jr).\nmagic_value(A):- head(A,mr),magic(mr).\nmagic_value(A):- head(A,mi),magic(mi).\nmagic_value(A):- head(A,de),magic(de).\nmagic_value(A):- head(A,dl),magic(dl).\nmagic_value(A):- head(A,qs),magic(qs).\nmagic_value(A):- head(A,ig),magic(ig).\nmagic_value(A):- head(A,qj),magic(qj).\nmagic_value(A):- head(A,cv),magic(cv).\nmagic_value(A):- head(A,jg),magic(jg).\nmagic_value(A):- head(A,sc),magic(sc).\nmagic_value(A):- head(A,gm),magic(gm).\nmagic_value(A):- head(A,nf),magic(nf).\nmagic_value(A):- head(A,og),magic(og).\nmagic_value(A):- head(A,im),magic(im).\nmagic_value(A):- head(A,pg),magic(pg).\nmagic_value(A):- head(A,ka),magic(ka).\nmagic_value(A):- head(A,ny),magic(ny).\nmagic_value(A):- head(A,hx),magic(hx).\nmagic_value(A):- head(A,dp),magic(dp).\nmagic_value(A):- head(A,ll),magic(ll).\nmagic_value(A):- head(A,sb),magic(sb).\nmagic_value(A):- head(A,ju),magic(ju).\nmagic_value(A):- head(A,ht),magic(ht).\nmagic_value(A):- head(A,eb),magic(eb).\nmagic_value(A):- head(A,ei),magic(ei).\nmagic_value(A):- head(A,ij),magic(ij).\nmagic_value(A):- head(A,hr),magic(hr).\nmagic_value(A):- head(A,db),magic(db).\nmagic_value(A):- head(A,np),magic(np).\nmagic_value(A):- head(A,ou),magic(ou).\nmagic_value(A):- head(A,c),magic(c).\nmagic_value(A):- head(A,eu),magic(eu).\nmagic_value(A):- head(A,eo),magic(eo).\nmagic_value(A):- head(A,bw),magic(bw).\nmagic_value(A):- head(A,lo),magic(lo).\nmagic_value(A):- head(A,sh),magic(sh).\nmagic_value(A):- head(A,bo),magic(bo).\nmagic_value(A):- head(A,fo),magic(fo).\nmagic_value(A):- head(A,lp),magic(lp).\nmagic_value(A):- head(A,co),magic(co).\nmagic_value(A):- head(A,k),magic(k).\nmagic_value(A):- head(A,ps),magic(ps).\nmagic_value(A):- head(A,pz),magic(pz).\nmagic_value(A):- head(A,fe),magic(fe).\nmagic_value(A):- head(A,dw),magic(dw).\nmagic_value(A):- head(A,ks),magic(ks).\nmagic_value(A):- head(A,ni),magic(ni).\nmagic_value(A):- head(A,fk),magic(fk).\nmagic_value(A):- head(A,kf),magic(kf).\nmagic_value(A):- head(A,ms),magic(ms).\nmagic_value(A):- head(A,dz),magic(dz).\nmagic_value(A):- head(A,lb),magic(lb).\nmagic_value(A):- head(A,mn),magic(mn).\nmagic_value(A):- head(A,io),magic(io).\nmagic_value(A):- head(A,oa),magic(oa).\nmagic_value(A):- head(A,cp),magic(cp).\nmagic_value(A):- head(A,ew),magic(ew).\nmagic_value(A):- head(A,pk),magic(pk).", "is_solution": true, "conf_matrix": [200, 0, 200, 0], "total_exec_time": 2.111970083, "durations": [{"operation": "Test", "called": 1, "total": 0.04291699999999987, "mean": 0.04291699999999987, "maximum": 0.04291699999999987, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 1, "total": 0.034940709000000014, "mean": 0.034940709000000014, "maximum": 0.034940709000000014, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 1, "total": 0.00038325000000005716, "mean": 0.00038325000000005716, "maximum": 0.00038325000000005716, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_magicvalues_multipleclauses/magicpopper/85/7/stats.json", "end": true, "__type__": "Stats"}