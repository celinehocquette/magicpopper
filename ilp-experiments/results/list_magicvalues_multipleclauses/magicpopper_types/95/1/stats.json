{"log_best_programs": true, "num_literals": 0, "total_programs": 8, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.0004572910000000263, 0.0006374170000000845, 0.001625875000000221, 0.001079332999999849, 0.0031844170000003835, 0.0011529169999997535, 0.0006397080000000166, 0.002184791999999991, 0.0005503749999999918], "find_bindings_prolog": [0.06391658300000014, 0.040504374999999815, 0.17672716600000005, 0.18633208299999993, 0.19648449999999995, 0.19403145900000007], "test": [0.0753246660000002, 0.054075333000000114, 0.036790665999999916, 0.1770517909999998, 0.18710783399999986, 0.03185249999999984, 0.19704504200000006, 0.19437783399999997], "combine": [0.16719391700000008, 0.009790917000000121, 7.919999998051708e-07, 6.670000001207654e-07, 7.919999998051708e-07, 5.829999998319124e-07, 5.00000000069889e-07, 6.250000001983835e-07], "constrain": [0.002328958000000103, 0.006736582999999907, 0.00043158300000012417, 0.005515000000000381, 0.00804670800000018, 0.001024709000000179, 0.001859082999999817, 0.0020220420000001127]}, "final_exec_time": 2.90714825, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- head(A,w),magic(w).\nmagic_value(A):- head(A,jj),magic(jj).\nmagic_value(A):- head(A,nd),magic(nd).\nmagic_value(A):- head(A,ru),magic(ru).\nmagic_value(A):- head(A,dg),magic(dg).\nmagic_value(A):- head(A,px),magic(px).\nmagic_value(A):- head(A,fv),magic(fv).\nmagic_value(A):- head(A,og),magic(og).\nmagic_value(A):- head(A,qr),magic(qr).\nmagic_value(A):- head(A,en),magic(en).\nmagic_value(A):- head(A,no),magic(no).\nmagic_value(A):- head(A,hp),magic(hp).\nmagic_value(A):- head(A,co),magic(co).\nmagic_value(A):- head(A,ba),magic(ba).\nmagic_value(A):- head(A,db),magic(db).\nmagic_value(A):- head(A,gx),magic(gx).\nmagic_value(A):- head(A,eh),magic(eh).\nmagic_value(A):- head(A,qa),magic(qa).\nmagic_value(A):- head(A,ib),magic(ib).\nmagic_value(A):- head(A,au),magic(au).\nmagic_value(A):- head(A,gq),magic(gq).\nmagic_value(A):- head(A,kr),magic(kr).\nmagic_value(A):- head(A,jz),magic(jz).\nmagic_value(A):- head(A,at),magic(at).\nmagic_value(A):- head(A,ar),magic(ar).\nmagic_value(A):- head(A,oo),magic(oo).\nmagic_value(A):- head(A,aj),magic(aj).\nmagic_value(A):- head(A,gl),magic(gl).\nmagic_value(A):- head(A,gc),magic(gc).\nmagic_value(A):- head(A,nh),magic(nh).\nmagic_value(A):- head(A,lo),magic(lo).\nmagic_value(A):- head(A,qf),magic(qf).\nmagic_value(A):- head(A,ih),magic(ih).\nmagic_value(A):- head(A,bi),magic(bi).\nmagic_value(A):- head(A,pv),magic(pv).\nmagic_value(A):- head(A,fx),magic(fx).\nmagic_value(A):- head(A,li),magic(li).\nmagic_value(A):- head(A,gz),magic(gz).\nmagic_value(A):- head(A,mb),magic(mb).\nmagic_value(A):- head(A,ec),magic(ec).\nmagic_value(A):- head(A,af),magic(af).\nmagic_value(A):- head(A,qb),magic(qb).\nmagic_value(A):- head(A,mt),magic(mt).\nmagic_value(A):- head(A,ls),magic(ls).\nmagic_value(A):- head(A,mq),magic(mq).\nmagic_value(A):- head(A,kc),magic(kc).\nmagic_value(A):- head(A,fn),magic(fn).\nmagic_value(A):- head(A,cn),magic(cn).\nmagic_value(A):- head(A,ix),magic(ix).\nmagic_value(A):- head(A,ht),magic(ht).\nmagic_value(A):- head(A,qu),magic(qu).\nmagic_value(A):- head(A,ll),magic(ll).\nmagic_value(A):- head(A,fb),magic(fb).\nmagic_value(A):- head(A,lj),magic(lj).\nmagic_value(A):- head(A,ee),magic(ee).\nmagic_value(A):- head(A,cf),magic(cf).\nmagic_value(A):- head(A,gh),magic(gh).\nmagic_value(A):- head(A,ia),magic(ia).\nmagic_value(A):- head(A,nq),magic(nq).\nmagic_value(A):- head(A,ad),magic(ad).\nmagic_value(A):- head(A,di),magic(di).\nmagic_value(A):- head(A,ep),magic(ep).\nmagic_value(A):- head(A,dz),magic(dz).\nmagic_value(A):- head(A,kq),magic(kq).\nmagic_value(A):- head(A,mi),magic(mi).\nmagic_value(A):- head(A,be),magic(be).\nmagic_value(A):- head(A,qp),magic(qp).\nmagic_value(A):- head(A,kk),magic(kk).\nmagic_value(A):- head(A,ea),magic(ea).\nmagic_value(A):- head(A,fl),magic(fl).\nmagic_value(A):- head(A,iq),magic(iq).\nmagic_value(A):- head(A,ro),magic(ro).\nmagic_value(A):- head(A,hf),magic(hf).\nmagic_value(A):- head(A,qt),magic(qt).\nmagic_value(A):- head(A,fu),magic(fu).\nmagic_value(A):- head(A,bu),magic(bu).\nmagic_value(A):- head(A,am),magic(am).\nmagic_value(A):- head(A,eu),magic(eu).\nmagic_value(A):- head(A,is),magic(is).\nmagic_value(A):- head(A,qy),magic(qy).\nmagic_value(A):- head(A,pf),magic(pf).\nmagic_value(A):- head(A,kd),magic(kd).\nmagic_value(A):- head(A,g),magic(g).\nmagic_value(A):- head(A,ke),magic(ke).\nmagic_value(A):- head(A,x),magic(x).\nmagic_value(A):- head(A,nc),magic(nc).\nmagic_value(A):- head(A,gm),magic(gm).\nmagic_value(A):- head(A,oa),magic(oa).\nmagic_value(A):- head(A,mm),magic(mm).\nmagic_value(A):- head(A,oy),magic(oy).\nmagic_value(A):- head(A,gg),magic(gg).\nmagic_value(A):- head(A,se),magic(se).\nmagic_value(A):- head(A,po),magic(po).\nmagic_value(A):- head(A,ac),magic(ac).\nmagic_value(A):- head(A,ji),magic(ji).", "is_solution": true, "conf_matrix": [200, 0, 200, 0], "total_exec_time": 2.907144833, "durations": [{"operation": "Test", "called": 1, "total": 0.0753246660000002, "mean": 0.0753246660000002, "maximum": 0.0753246660000002, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 1, "total": 0.06391658300000014, "mean": 0.06391658300000014, "maximum": 0.06391658300000014, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 1, "total": 0.0004572910000000263, "mean": 0.0004572910000000263, "maximum": 0.0004572910000000263, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_magicvalues_multipleclauses/magicpopper/95/1/stats.json", "end": true, "__type__": "Stats"}