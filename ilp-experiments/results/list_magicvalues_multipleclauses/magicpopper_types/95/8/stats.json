{"log_best_programs": true, "num_literals": 0, "total_programs": 8, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.00040445799999999643, 0.0005499159999999836, 0.0015097499999998654, 0.0013297499999997964, 0.002274333999999989, 0.0006941249999998789, 0.0003936659999999037, 0.0007559580000000565, 0.00073174999999992], "find_bindings_prolog": [0.03916841700000018, 0.035209000000000046, 0.1448187089999997, 0.16866829099999991, 0.14689233299999982, 0.146264167], "test": [0.047807333000000174, 0.048734333999999935, 0.021256082999999926, 0.1451604999999998, 0.169215334, 0.14725783299999984, 0.1466070829999997, 0.017671875000000004], "combine": [0.12184841599999996, 0.01138383399999987, 5.83000000053957e-07, 5.829999998319124e-07, 5.829999998319124e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.999999996257998e-07], "constrain": [0.0019210410000001232, 0.0026559580000000693, 0.0004524590000001272, 0.0031464580000002407, 0.005596375000000098, 0.0016919169999995987, 0.005431415999999967, 0.0005627079999999118]}, "final_exec_time": 2.255414375, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- head(A,ad),magic(ad).\nmagic_value(A):- head(A,gl),magic(gl).\nmagic_value(A):- head(A,ee),magic(ee).\nmagic_value(A):- head(A,lj),magic(lj).\nmagic_value(A):- head(A,jz),magic(jz).\nmagic_value(A):- head(A,bi),magic(bi).\nmagic_value(A):- head(A,g),magic(g).\nmagic_value(A):- head(A,jj),magic(jj).\nmagic_value(A):- head(A,nc),magic(nc).\nmagic_value(A):- head(A,be),magic(be).\nmagic_value(A):- head(A,pf),magic(pf).\nmagic_value(A):- head(A,ke),magic(ke).\nmagic_value(A):- head(A,fv),magic(fv).\nmagic_value(A):- head(A,mt),magic(mt).\nmagic_value(A):- head(A,nd),magic(nd).\nmagic_value(A):- head(A,qf),magic(qf).\nmagic_value(A):- head(A,ll),magic(ll).\nmagic_value(A):- head(A,qt),magic(qt).\nmagic_value(A):- head(A,ih),magic(ih).\nmagic_value(A):- head(A,nh),magic(nh).\nmagic_value(A):- head(A,gh),magic(gh).\nmagic_value(A):- head(A,gx),magic(gx).\nmagic_value(A):- head(A,ba),magic(ba).\nmagic_value(A):- head(A,ac),magic(ac).\nmagic_value(A):- head(A,dg),magic(dg).\nmagic_value(A):- head(A,og),magic(og).\nmagic_value(A):- head(A,fu),magic(fu).\nmagic_value(A):- head(A,mi),magic(mi).\nmagic_value(A):- head(A,qr),magic(qr).\nmagic_value(A):- head(A,is),magic(is).\nmagic_value(A):- head(A,kc),magic(kc).\nmagic_value(A):- head(A,ru),magic(ru).\nmagic_value(A):- head(A,db),magic(db).\nmagic_value(A):- head(A,qy),magic(qy).\nmagic_value(A):- head(A,qb),magic(qb).\nmagic_value(A):- head(A,au),magic(au).\nmagic_value(A):- head(A,mm),magic(mm).\nmagic_value(A):- head(A,nq),magic(nq).\nmagic_value(A):- head(A,eh),magic(eh).\nmagic_value(A):- head(A,oa),magic(oa).\nmagic_value(A):- head(A,ls),magic(ls).\nmagic_value(A):- head(A,qu),magic(qu).\nmagic_value(A):- head(A,gq),magic(gq).\nmagic_value(A):- head(A,ib),magic(ib).\nmagic_value(A):- head(A,x),magic(x).\nmagic_value(A):- head(A,mb),magic(mb).\nmagic_value(A):- head(A,ht),magic(ht).\nmagic_value(A):- tail(A,B),head(B,fb),magic(fb).\nmagic_value(A):- head(A,ix),magic(ix).\nmagic_value(A):- head(A,at),magic(at).\nmagic_value(A):- head(A,no),magic(no).\nmagic_value(A):- head(A,af),magic(af).\nmagic_value(A):- head(A,cf),magic(cf).\nmagic_value(A):- head(A,fb),magic(fb).\nmagic_value(A):- head(A,ec),magic(ec).\nmagic_value(A):- head(A,am),magic(am).\nmagic_value(A):- head(A,mq),magic(mq).\nmagic_value(A):- head(A,li),magic(li).\nmagic_value(A):- head(A,gz),magic(gz).\nmagic_value(A):- head(A,ep),magic(ep).\nmagic_value(A):- head(A,kk),magic(kk).\nmagic_value(A):- head(A,hf),magic(hf).\nmagic_value(A):- head(A,gg),magic(gg).\nmagic_value(A):- head(A,cn),magic(cn).\nmagic_value(A):- head(A,po),magic(po).\nmagic_value(A):- head(A,eu),magic(eu).\nmagic_value(A):- head(A,px),magic(px).\nmagic_value(A):- head(A,se),magic(se).\nmagic_value(A):- head(A,qp),magic(qp).\nmagic_value(A):- head(A,oo),magic(oo).\nmagic_value(A):- head(A,iq),magic(iq).\nmagic_value(A):- head(A,bu),magic(bu).\nmagic_value(A):- head(A,qa),magic(qa).\nmagic_value(A):- head(A,fl),magic(fl).\nmagic_value(A):- head(A,di),magic(di).\nmagic_value(A):- head(A,lo),magic(lo).\nmagic_value(A):- head(A,ji),magic(ji).\nmagic_value(A):- head(A,ar),magic(ar).\nmagic_value(A):- head(A,w),magic(w).\nmagic_value(A):- head(A,dz),magic(dz).\nmagic_value(A):- head(A,fn),magic(fn).\nmagic_value(A):- head(A,gm),magic(gm).\nmagic_value(A):- head(A,ro),magic(ro).\nmagic_value(A):- head(A,fx),magic(fx).\nmagic_value(A):- head(A,ea),magic(ea).\nmagic_value(A):- head(A,aj),magic(aj).\nmagic_value(A):- head(A,gc),magic(gc).\nmagic_value(A):- head(A,ia),magic(ia).\nmagic_value(A):- head(A,kd),magic(kd).\nmagic_value(A):- head(A,co),magic(co).\nmagic_value(A):- head(A,kr),magic(kr).\nmagic_value(A):- head(A,en),magic(en).\nmagic_value(A):- head(A,kq),magic(kq).\nmagic_value(A):- head(A,oy),magic(oy).", "is_solution": true, "conf_matrix": [200, 0, 200, 0], "total_exec_time": 2.255411625, "durations": [{"operation": "Combine", "called": 1, "total": 0.12184841599999996, "mean": 0.12184841599999996, "maximum": 0.12184841599999996, "__type__": "DurationSummary"}, {"operation": "Test", "called": 2, "total": 0.09654166700000011, "mean": 0.048270833500000054, "maximum": 0.048734333999999935, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 2, "total": 0.07437741700000022, "mean": 0.03718870850000011, "maximum": 0.03916841700000018, "__type__": "DurationSummary"}, {"operation": "Constrain", "called": 1, "total": 0.0019210410000001232, "mean": 0.0019210410000001232, "maximum": 0.0019210410000001232, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 2, "total": 0.0009543739999999801, "mean": 0.00047718699999999004, "maximum": 0.0005499159999999836, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_magicvalues_multipleclauses/magicpopper/95/8/stats.json", "end": true, "__type__": "Stats"}