{"log_best_programs": true, "num_literals": 0, "total_programs": 8, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.00037712499999997817, 0.0006445830000001429, 0.0011872920000000065, 0.0016939170000001003, 0.002177875000000107, 0.0009280419999999623, 0.0007208329999999208, 0.0004183329999998264, 0.0006810829999999157], "find_bindings_prolog": [0.027924416999999924, 0.030412415999999887, 0.13391970899999994, 0.1427752499999999, 0.14714883300000015, 0.15605933400000005], "test": [0.032905082999999946, 0.041796166999999995, 0.018941332999999894, 0.13423637499999996, 0.01746787499999991, 0.14311633400000012, 0.14751237500000025, 0.15656516700000012], "combine": [0.0674984999999999, 0.005445582999999976, 5.840000001366974e-07, 6.249999999763389e-07, 6.659999998159805e-07, 5.829999998319124e-07, 5.409999999095305e-07, 5.00000000069889e-07], "constrain": [0.0017310829999999111, 0.00235541600000011, 0.000420958999999943, 0.0030669580000000085, 0.0005350419999998746, 0.005274041999999923, 0.0017497500000001054, 0.001855082999999702]}, "final_exec_time": 2.089651042, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- head(A,mv),magic(mv).\nmagic_value(A):- head(A,ht),magic(ht).\nmagic_value(A):- head(A,fa),magic(fa).\nmagic_value(A):- head(A,ao),magic(ao).\nmagic_value(A):- head(A,ma),magic(ma).\nmagic_value(A):- head(A,nz),magic(nz).\nmagic_value(A):- head(A,mw),magic(mw).\nmagic_value(A):- head(A,jk),magic(jk).\nmagic_value(A):- head(A,ny),magic(ny).\nmagic_value(A):- head(A,kq),magic(kq).\nmagic_value(A):- head(A,fd),magic(fd).\nmagic_value(A):- head(A,lu),magic(lu).\nmagic_value(A):- head(A,hm),magic(hm).\nmagic_value(A):- head(A,eo),magic(eo).\nmagic_value(A):- head(A,rg),magic(rg).\nmagic_value(A):- head(A,ro),magic(ro).\nmagic_value(A):- head(A,cf),magic(cf).\nmagic_value(A):- head(A,bk),magic(bk).\nmagic_value(A):- head(A,ot),magic(ot).\nmagic_value(A):- head(A,hv),magic(hv).\nmagic_value(A):- head(A,dz),magic(dz).\nmagic_value(A):- head(A,ps),magic(ps).\nmagic_value(A):- head(A,pf),magic(pf).\nmagic_value(A):- head(A,fs),magic(fs).\nmagic_value(A):- head(A,z),magic(z).\nmagic_value(A):- head(A,gw),magic(gw).\nmagic_value(A):- head(A,rh),magic(rh).\nmagic_value(A):- head(A,rz),magic(rz).\nmagic_value(A):- head(A,fc),magic(fc).\nmagic_value(A):- head(A,ch),magic(ch).\nmagic_value(A):- head(A,ca),magic(ca).\nmagic_value(A):- head(A,jl),magic(jl).\nmagic_value(A):- head(A,nn),magic(nn).\nmagic_value(A):- head(A,gz),magic(gz).\nmagic_value(A):- head(A,nm),magic(nm).\nmagic_value(A):- head(A,g),magic(g).\nmagic_value(A):- head(A,pe),magic(pe).\nmagic_value(A):- head(A,pp),magic(pp).\nmagic_value(A):- head(A,ia),magic(ia).\nmagic_value(A):- head(A,mb),magic(mb).\nmagic_value(A):- head(A,jo),magic(jo).\nmagic_value(A):- head(A,bv),magic(bv).\nmagic_value(A):- head(A,bd),magic(bd).\nmagic_value(A):- head(A,pr),magic(pr).\nmagic_value(A):- head(A,ko),magic(ko).\nmagic_value(A):- head(A,bc),magic(bc).\nmagic_value(A):- head(A,qi),magic(qi).\nmagic_value(A):- head(A,as),magic(as).\nmagic_value(A):- head(A,c),magic(c).\nmagic_value(A):- head(A,y),magic(y).\nmagic_value(A):- head(A,ka),magic(ka).\nmagic_value(A):- head(A,iq),magic(iq).\nmagic_value(A):- head(A,es),magic(es).\nmagic_value(A):- head(A,ky),magic(ky).\nmagic_value(A):- head(A,fu),magic(fu).", "is_solution": true, "conf_matrix": [200, 0, 200, 0], "total_exec_time": 2.08964875, "durations": [{"operation": "Test", "called": 1, "total": 0.032905082999999946, "mean": 0.032905082999999946, "maximum": 0.032905082999999946, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 1, "total": 0.027924416999999924, "mean": 0.027924416999999924, "maximum": 0.027924416999999924, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 1, "total": 0.00037712499999997817, "mean": 0.00037712499999997817, "maximum": 0.00037712499999997817, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_magicvalues_multipleclauses/magicpopper/55/0/stats.json", "end": true, "__type__": "Stats"}