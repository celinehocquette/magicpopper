{"log_best_programs": true, "num_literals": 0, "total_programs": 8, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.0004134580000001442, 0.0004959579999999075, 0.0015387079999999997, 0.000936083000000032, 0.0016869580000000717, 0.00113029099999995, 0.0006960419999999523, 0.0008245000000002278, 0.0017084999999998907], "find_bindings_prolog": [0.031274374999999965, 0.03493429199999998, 0.13852483299999996, 0.16098308400000017, 0.15017412499999994, 0.148910125], "test": [0.03633387499999996, 0.04766983300000005, 0.019354874999999883, 0.13884054099999998, 0.1614930000000001, 0.15052154200000012, 0.018737500000000296, 0.1492571250000001], "combine": [0.04632841599999993, 0.00509091599999989, 4.999999998478444e-07, 6.660000000380251e-07, 6.669999998987208e-07, 5.409999999095305e-07, 5.00000000069889e-07, 5.00000000069889e-07], "constrain": [0.0018371669999999174, 0.0023867090000000424, 0.00042487499999999123, 0.003071249999999859, 0.005599040999999971, 0.0016987920000000045, 0.0019302090000001826, 0.004975083000000158]}, "final_exec_time": 2.0601151250000003, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- head(A,nz),magic(nz).\nmagic_value(A):- head(A,g),magic(g).\nmagic_value(A):- head(A,ma),magic(ma).\nmagic_value(A):- head(A,c),magic(c).\nmagic_value(A):- head(A,fa),magic(fa).\nmagic_value(A):- head(A,bd),magic(bd).\nmagic_value(A):- head(A,nm),magic(nm).\nmagic_value(A):- head(A,lu),magic(lu).\nmagic_value(A):- head(A,ca),magic(ca).\nmagic_value(A):- head(A,jo),magic(jo).\nmagic_value(A):- head(A,iq),magic(iq).\nmagic_value(A):- head(A,ia),magic(ia).\nmagic_value(A):- head(A,gw),magic(gw).\nmagic_value(A):- head(A,ka),magic(ka).\nmagic_value(A):- head(A,eo),magic(eo).\nmagic_value(A):- head(A,jl),magic(jl).\nmagic_value(A):- head(A,ps),magic(ps).\nmagic_value(A):- head(A,rg),magic(rg).\nmagic_value(A):- head(A,jk),magic(jk).\nmagic_value(A):- head(A,pr),magic(pr).\nmagic_value(A):- head(A,bc),magic(bc).\nmagic_value(A):- head(A,qi),magic(qi).\nmagic_value(A):- head(A,nn),magic(nn).\nmagic_value(A):- head(A,fu),magic(fu).\nmagic_value(A):- head(A,hv),magic(hv).\nmagic_value(A):- head(A,cf),magic(cf).\nmagic_value(A):- head(A,ny),magic(ny).\nmagic_value(A):- head(A,pp),magic(pp).\nmagic_value(A):- head(A,kq),magic(kq).\nmagic_value(A):- head(A,es),magic(es).\nmagic_value(A):- head(A,z),magic(z).\nmagic_value(A):- head(A,fc),magic(fc).\nmagic_value(A):- head(A,ch),magic(ch).\nmagic_value(A):- head(A,pe),magic(pe).\nmagic_value(A):- head(A,ko),magic(ko).\nmagic_value(A):- head(A,pf),magic(pf).\nmagic_value(A):- head(A,fd),magic(fd).\nmagic_value(A):- head(A,fs),magic(fs).\nmagic_value(A):- head(A,y),magic(y).\nmagic_value(A):- head(A,ot),magic(ot).\nmagic_value(A):- head(A,ao),magic(ao).\nmagic_value(A):- head(A,ro),magic(ro).\nmagic_value(A):- head(A,mb),magic(mb).\nmagic_value(A):- head(A,ht),magic(ht).\nmagic_value(A):- head(A,mw),magic(mw).\nmagic_value(A):- head(A,mv),magic(mv).\nmagic_value(A):- head(A,bk),magic(bk).\nmagic_value(A):- head(A,gz),magic(gz).\nmagic_value(A):- head(A,ky),magic(ky).\nmagic_value(A):- head(A,rh),magic(rh).\nmagic_value(A):- head(A,dz),magic(dz).\nmagic_value(A):- head(A,as),magic(as).\nmagic_value(A):- head(A,bv),magic(bv).\nmagic_value(A):- head(A,hm),magic(hm).\nmagic_value(A):- head(A,rz),magic(rz).", "is_solution": true, "conf_matrix": [200, 0, 200, 0], "total_exec_time": 2.060111792, "durations": [{"operation": "Test", "called": 1, "total": 0.03633387499999996, "mean": 0.03633387499999996, "maximum": 0.03633387499999996, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 1, "total": 0.031274374999999965, "mean": 0.031274374999999965, "maximum": 0.031274374999999965, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 1, "total": 0.0004134580000001442, "mean": 0.0004134580000001442, "maximum": 0.0004134580000001442, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_magicvalues_multipleclauses/magicpopper/55/4/stats.json", "end": true, "__type__": "Stats"}