{"log_best_programs": true, "num_literals": 0, "total_programs": 8, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.0003810419999998871, 0.0006341670000000743, 0.0011773340000000854, 0.0017064170000000711, 0.0014192920000000164, 0.0005744999999999223, 0.0009296669999998564, 0.0015624590000000715, 0.0006342919999999808], "find_bindings_prolog": [0.027719583000000103, 0.031833457999999926, 0.13194387500000015, 0.14496254200000025, 0.15551491700000009, 0.15240825000000013], "test": [0.03241379200000005, 0.043567750000000016, 0.01878329199999995, 0.13225883300000008, 0.019977416999999997, 0.14530816700000004, 0.1560272089999999, 0.1527655000000001], "combine": [0.051269917000000165, 0.005290167000000068, 5.83000000053957e-07, 6.669999998987208e-07, 7.07999999960407e-07, 5.419999999922709e-07, 4.999999996257998e-07, 6.249999997542943e-07], "constrain": [0.0017816670000001533, 0.0023373340000001352, 0.00043087500000016377, 0.0031524999999998915, 0.000531416999999923, 0.005221582999999974, 0.001985207999999794, 0.00526800000000005]}, "final_exec_time": 2.0760389999999997, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- head(A,qi),magic(qi).\nmagic_value(A):- head(A,rh),magic(rh).\nmagic_value(A):- head(A,ka),magic(ka).\nmagic_value(A):- head(A,rg),magic(rg).\nmagic_value(A):- head(A,nn),magic(nn).\nmagic_value(A):- head(A,y),magic(y).\nmagic_value(A):- head(A,ht),magic(ht).\nmagic_value(A):- head(A,c),magic(c).\nmagic_value(A):- head(A,pe),magic(pe).\nmagic_value(A):- head(A,iq),magic(iq).\nmagic_value(A):- head(A,mb),magic(mb).\nmagic_value(A):- head(A,ny),magic(ny).\nmagic_value(A):- head(A,ps),magic(ps).\nmagic_value(A):- head(A,bd),magic(bd).\nmagic_value(A):- head(A,ia),magic(ia).\nmagic_value(A):- head(A,bv),magic(bv).\nmagic_value(A):- head(A,es),magic(es).\nmagic_value(A):- head(A,nm),magic(nm).\nmagic_value(A):- head(A,g),magic(g).\nmagic_value(A):- head(A,cf),magic(cf).\nmagic_value(A):- head(A,mv),magic(mv).\nmagic_value(A):- head(A,ch),magic(ch).\nmagic_value(A):- head(A,pr),magic(pr).\nmagic_value(A):- head(A,fu),magic(fu).\nmagic_value(A):- head(A,as),magic(as).\nmagic_value(A):- head(A,kq),magic(kq).\nmagic_value(A):- head(A,z),magic(z).\nmagic_value(A):- head(A,pp),magic(pp).\nmagic_value(A):- head(A,rz),magic(rz).\nmagic_value(A):- head(A,hv),magic(hv).\nmagic_value(A):- head(A,ao),magic(ao).\nmagic_value(A):- head(A,ko),magic(ko).\nmagic_value(A):- head(A,jo),magic(jo).\nmagic_value(A):- head(A,mw),magic(mw).\nmagic_value(A):- head(A,ca),magic(ca).\nmagic_value(A):- head(A,jk),magic(jk).\nmagic_value(A):- head(A,gz),magic(gz).\nmagic_value(A):- head(A,bk),magic(bk).\nmagic_value(A):- head(A,gw),magic(gw).\nmagic_value(A):- head(A,nz),magic(nz).\nmagic_value(A):- head(A,ot),magic(ot).\nmagic_value(A):- head(A,bc),magic(bc).\nmagic_value(A):- head(A,dz),magic(dz).\nmagic_value(A):- head(A,ky),magic(ky).\nmagic_value(A):- head(A,ro),magic(ro).\nmagic_value(A):- head(A,fc),magic(fc).\nmagic_value(A):- head(A,fd),magic(fd).\nmagic_value(A):- head(A,pf),magic(pf).\nmagic_value(A):- head(A,hm),magic(hm).\nmagic_value(A):- head(A,fs),magic(fs).\nmagic_value(A):- head(A,jl),magic(jl).\nmagic_value(A):- head(A,lu),magic(lu).\nmagic_value(A):- head(A,ma),magic(ma).\nmagic_value(A):- head(A,eo),magic(eo).\nmagic_value(A):- head(A,fa),magic(fa).", "is_solution": true, "conf_matrix": [200, 0, 200, 0], "total_exec_time": 2.07603575, "durations": [{"operation": "Test", "called": 1, "total": 0.03241379200000005, "mean": 0.03241379200000005, "maximum": 0.03241379200000005, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 1, "total": 0.027719583000000103, "mean": 0.027719583000000103, "maximum": 0.027719583000000103, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 1, "total": 0.0003810419999998871, "mean": 0.0003810419999998871, "maximum": 0.0003810419999998871, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_magicvalues_multipleclauses/magicpopper/55/1/stats.json", "end": true, "__type__": "Stats"}