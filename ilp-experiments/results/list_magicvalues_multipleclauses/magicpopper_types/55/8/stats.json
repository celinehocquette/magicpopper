{"log_best_programs": true, "num_literals": 0, "total_programs": 8, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.00038091699999998063, 0.0004966250000000283, 0.0016980840000000441, 0.001033375000000003, 0.0016622079999999428, 0.0008063330000003255, 0.0009208339999999815, 0.0008995419999999754, 0.00017800000000001148], "find_bindings_prolog": [0.02821708299999992, 0.03352458299999994, 0.14159824999999993, 0.15083970800000013, 0.17097670799999998, 0.15211433299999966], "test": [0.03318845800000014, 0.04594704199999988, 0.019319124999999993, 0.1419059589999998, 0.15117779200000014, 0.17148529199999984, 0.15245391699999988, 0.020045874999999658], "combine": [0.054544707999999886, 0.005384958000000051, 5.83000000053957e-07, 6.249999999763389e-07, 6.670000001207654e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.830000002760016e-07], "constrain": [0.001761208000000014, 0.002405666999999889, 0.00041599999999997195, 0.0030409170000000874, 0.004978625000000125, 0.005549750000000131, 0.001806749999999635, 0.001901457999999856]}, "final_exec_time": 2.119587125, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- head(A,pr),magic(pr).\nmagic_value(A):- head(A,y),magic(y).\nmagic_value(A):- head(A,fs),magic(fs).\nmagic_value(A):- head(A,fu),magic(fu).\nmagic_value(A):- head(A,bc),magic(bc).\nmagic_value(A):- head(A,nn),magic(nn).\nmagic_value(A):- head(A,ps),magic(ps).\nmagic_value(A):- head(A,ch),magic(ch).\nmagic_value(A):- head(A,z),magic(z).\nmagic_value(A):- head(A,g),magic(g).\nmagic_value(A):- head(A,ro),magic(ro).\nmagic_value(A):- head(A,ca),magic(ca).\nmagic_value(A):- head(A,rg),magic(rg).\nmagic_value(A):- head(A,mb),magic(mb).\nmagic_value(A):- head(A,fd),magic(fd).\nmagic_value(A):- head(A,dz),magic(dz).\nmagic_value(A):- head(A,ka),magic(ka).\nmagic_value(A):- head(A,ko),magic(ko).\nmagic_value(A):- head(A,c),magic(c).\nmagic_value(A):- head(A,fa),magic(fa).\nmagic_value(A):- head(A,eo),magic(eo).\nmagic_value(A):- head(A,qi),magic(qi).\nmagic_value(A):- head(A,bv),magic(bv).\nmagic_value(A):- head(A,fc),magic(fc).\nmagic_value(A):- head(A,jo),magic(jo).\nmagic_value(A):- head(A,nz),magic(nz).\nmagic_value(A):- head(A,nm),magic(nm).\nmagic_value(A):- head(A,ot),magic(ot).\nmagic_value(A):- head(A,ia),magic(ia).\nmagic_value(A):- head(A,ao),magic(ao).\nmagic_value(A):- head(A,pp),magic(pp).\nmagic_value(A):- head(A,lu),magic(lu).\nmagic_value(A):- head(A,bd),magic(bd).\nmagic_value(A):- head(A,rh),magic(rh).\nmagic_value(A):- head(A,kq),magic(kq).\nmagic_value(A):- head(A,ht),magic(ht).\nmagic_value(A):- head(A,ny),magic(ny).\nmagic_value(A):- head(A,cf),magic(cf).\nmagic_value(A):- head(A,bk),magic(bk).\nmagic_value(A):- head(A,rz),magic(rz).\nmagic_value(A):- head(A,jl),magic(jl).\nmagic_value(A):- head(A,gw),magic(gw).\nmagic_value(A):- head(A,gz),magic(gz).\nmagic_value(A):- head(A,mw),magic(mw).\nmagic_value(A):- head(A,as),magic(as).\nmagic_value(A):- head(A,pf),magic(pf).\nmagic_value(A):- head(A,mv),magic(mv).\nmagic_value(A):- head(A,iq),magic(iq).\nmagic_value(A):- head(A,ma),magic(ma).\nmagic_value(A):- head(A,pe),magic(pe).\nmagic_value(A):- head(A,hm),magic(hm).\nmagic_value(A):- head(A,hv),magic(hv).\nmagic_value(A):- head(A,es),magic(es).\nmagic_value(A):- head(A,ky),magic(ky).\nmagic_value(A):- head(A,jk),magic(jk).", "is_solution": true, "conf_matrix": [200, 0, 200, 0], "total_exec_time": 2.119584375, "durations": [{"operation": "Test", "called": 1, "total": 0.03318845800000014, "mean": 0.03318845800000014, "maximum": 0.03318845800000014, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 1, "total": 0.02821708299999992, "mean": 0.02821708299999992, "maximum": 0.02821708299999992, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 1, "total": 0.00038091699999998063, "mean": 0.00038091699999998063, "maximum": 0.00038091699999998063, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_magicvalues_multipleclauses/magicpopper/55/8/stats.json", "end": true, "__type__": "Stats"}