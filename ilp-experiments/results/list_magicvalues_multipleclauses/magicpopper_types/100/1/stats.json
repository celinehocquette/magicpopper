{"log_best_programs": true, "num_literals": 0, "total_programs": 8, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.0003890410000000344, 0.0006329999999998837, 0.001479000000000008, 0.0013321669999999397, 0.0015516670000002009, 0.0006547919999997376, 0.0008122080000001475, 0.001969208000000222, 0.0012000839999997126], "find_bindings_prolog": [0.041832042000000014, 0.037425292, 0.14449566699999994, 0.1512863339999999, 0.16297495900000003, 0.15120983300000024], "test": [0.05056358299999997, 0.05136341700000013, 0.020072917000000023, 0.1448347499999998, 0.1516521670000004, 0.02260820900000038, 0.1634976250000002, 0.1515824160000001], "combine": [0.120687875, 0.011601583000000026, 6.249999999763389e-07, 7.499999998827889e-07, 6.670000001207654e-07, 5.839999999146528e-07, 5.829999998319124e-07, 5.419999999922709e-07], "constrain": [0.0018240830000000319, 0.002616874999999963, 0.000460082999999889, 0.003347666000000249, 0.005519333000000071, 0.0020534169999999463, 0.0019811659999997566, 0.0018227920000000175]}, "final_exec_time": 2.280327666, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- head(A,ec),magic(ec).\nmagic_value(A):- head(A,pv),magic(pv).\nmagic_value(A):- head(A,ov),magic(ov).\nmagic_value(A):- head(A,fw),magic(fw).\nmagic_value(A):- head(A,og),magic(og).\nmagic_value(A):- head(A,gi),magic(gi).\nmagic_value(A):- head(A,ou),magic(ou).\nmagic_value(A):- head(A,cw),magic(cw).\nmagic_value(A):- head(A,gl),magic(gl).\nmagic_value(A):- head(A,oa),magic(oa).\nmagic_value(A):- head(A,hk),magic(hk).\nmagic_value(A):- head(A,rl),magic(rl).\nmagic_value(A):- head(A,cs),magic(cs).\nmagic_value(A):- head(A,x),magic(x).\nmagic_value(A):- head(A,bb),magic(bb).\nmagic_value(A):- head(A,lf),magic(lf).\nmagic_value(A):- head(A,at),magic(at).\nmagic_value(A):- head(A,bt),magic(bt).\nmagic_value(A):- head(A,qc),magic(qc).\nmagic_value(A):- head(A,in),magic(in).\nmagic_value(A):- head(A,qg),magic(qg).\nmagic_value(A):- head(A,au),magic(au).\nmagic_value(A):- head(A,qy),magic(qy).\nmagic_value(A):- head(A,el),magic(el).\nmagic_value(A):- head(A,aj),magic(aj).\nmagic_value(A):- head(A,cf),magic(cf).\nmagic_value(A):- head(A,ox),magic(ox).\nmagic_value(A):- head(A,ip),magic(ip).\nmagic_value(A):- head(A,or),magic(or).\nmagic_value(A):- head(A,qr),magic(qr).\nmagic_value(A):- head(A,ba),magic(ba).\nmagic_value(A):- head(A,ex),magic(ex).\nmagic_value(A):- head(A,ai),magic(ai).\nmagic_value(A):- head(A,nr),magic(nr).\nmagic_value(A):- head(A,kq),magic(kq).\nmagic_value(A):- head(A,ga),magic(ga).\nmagic_value(A):- head(A,fn),magic(fn).\nmagic_value(A):- head(A,fz),magic(fz).\nmagic_value(A):- head(A,bf),magic(bf).\nmagic_value(A):- head(A,hc),magic(hc).\nmagic_value(A):- head(A,jt),magic(jt).\nmagic_value(A):- head(A,cb),magic(cb).\nmagic_value(A):- head(A,qk),magic(qk).\nmagic_value(A):- head(A,gv),magic(gv).\nmagic_value(A):- head(A,qu),magic(qu).\nmagic_value(A):- head(A,jb),magic(jb).\nmagic_value(A):- head(A,pl),magic(pl).\nmagic_value(A):- head(A,rx),magic(rx).\nmagic_value(A):- head(A,en),magic(en).\nmagic_value(A):- head(A,px),magic(px).\nmagic_value(A):- head(A,ax),magic(ax).\nmagic_value(A):- head(A,fr),magic(fr).\nmagic_value(A):- head(A,y),magic(y).\nmagic_value(A):- head(A,oy),magic(oy).\nmagic_value(A):- head(A,cu),magic(cu).\nmagic_value(A):- head(A,ig),magic(ig).\nmagic_value(A):- head(A,bn),magic(bn).\nmagic_value(A):- head(A,nu),magic(nu).\nmagic_value(A):- head(A,ab),magic(ab).\nmagic_value(A):- head(A,db),magic(db).\nmagic_value(A):- head(A,ml),magic(ml).\nmagic_value(A):- head(A,d),magic(d).\nmagic_value(A):- head(A,dv),magic(dv).\nmagic_value(A):- head(A,io),magic(io).\nmagic_value(A):- head(A,ey),magic(ey).\nmagic_value(A):- head(A,fb),magic(fb).\nmagic_value(A):- head(A,jk),magic(jk).\nmagic_value(A):- head(A,rp),magic(rp).\nmagic_value(A):- head(A,iy),magic(iy).\nmagic_value(A):- head(A,jh),magic(jh).\nmagic_value(A):- head(A,qt),magic(qt).\nmagic_value(A):- head(A,rn),magic(rn).\nmagic_value(A):- head(A,mq),magic(mq).\nmagic_value(A):- head(A,ht),magic(ht).\nmagic_value(A):- head(A,pc),magic(pc).\nmagic_value(A):- head(A,gt),magic(gt).\nmagic_value(A):- head(A,gf),magic(gf).\nmagic_value(A):- head(A,ld),magic(ld).\nmagic_value(A):- head(A,dr),magic(dr).\nmagic_value(A):- head(A,qi),magic(qi).\nmagic_value(A):- head(A,ms),magic(ms).\nmagic_value(A):- head(A,mb),magic(mb).\nmagic_value(A):- head(A,ag),magic(ag).\nmagic_value(A):- head(A,qb),magic(qb).\nmagic_value(A):- head(A,lh),magic(lh).\nmagic_value(A):- head(A,eb),magic(eb).\nmagic_value(A):- head(A,kb),magic(kb).\nmagic_value(A):- head(A,cd),magic(cd).\nmagic_value(A):- tail(A,B),head(B,iq),magic(iq).\nmagic_value(A):- head(A,cj),magic(cj).\nmagic_value(A):- head(A,dh),magic(dh).\nmagic_value(A):- head(A,bx),magic(bx).\nmagic_value(A):- head(A,bc),magic(bc).\nmagic_value(A):- head(A,ao),magic(ao).\nmagic_value(A):- head(A,hs),magic(hs).\nmagic_value(A):- head(A,ru),magic(ru).\nmagic_value(A):- head(A,ki),magic(ki).\nmagic_value(A):- head(A,bd),magic(bd).\nmagic_value(A):- head(A,fv),magic(fv).", "is_solution": true, "conf_matrix": [200, 0, 200, 0], "total_exec_time": 2.280324458, "durations": [{"operation": "Combine", "called": 1, "total": 0.120687875, "mean": 0.120687875, "maximum": 0.120687875, "__type__": "DurationSummary"}, {"operation": "Test", "called": 2, "total": 0.1019270000000001, "mean": 0.05096350000000005, "maximum": 0.05136341700000013, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 2, "total": 0.07925733400000001, "mean": 0.039628667000000006, "maximum": 0.041832042000000014, "__type__": "DurationSummary"}, {"operation": "Constrain", "called": 1, "total": 0.0018240830000000319, "mean": 0.0018240830000000319, "maximum": 0.0018240830000000319, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 2, "total": 0.001022040999999918, "mean": 0.000511020499999959, "maximum": 0.0006329999999998837, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_magicvalues_multipleclauses/magicpopper/100/1/stats.json", "end": true, "__type__": "Stats"}