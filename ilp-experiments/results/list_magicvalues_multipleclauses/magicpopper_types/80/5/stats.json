{"log_best_programs": true, "num_literals": 0, "total_programs": 8, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.00038999999999989043, 0.0005296660000000397, 0.0012613339999998363, 0.0016085409999999634, 0.0012542920000000457, 0.0003334999999999866, 0.0014773329999999696, 0.0010707910000000709, 0.0014296659999999406], "find_bindings_prolog": [0.03490062499999991, 0.03691691600000002, 0.14144445800000005, 0.15524462499999991, 0.16700333400000034, 0.15385008300000003], "test": [0.04212570799999993, 0.05077120800000001, 0.019201374999999965, 0.14175433400000004, 0.021688417000000015, 0.15558645800000015, 0.16755175000000033, 0.15421312500000006], "combine": [0.09703162500000007, 0.005959625000000024, 5.829999998319124e-07, 6.249999999763389e-07, 6.669999998987208e-07, 5.419999999922709e-07, 4.5899999978615824e-07, 5.84000000358742e-07], "constrain": [0.0017590830000000501, 0.002302333999999906, 0.000423749999999945, 0.003026000000000195, 0.000524082999999953, 0.005587291999999966, 0.0052843330000000854, 0.0018139999999999823]}, "final_exec_time": 2.202516958, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- head(A,kx),magic(kx).\nmagic_value(A):- head(A,mx),magic(mx).\nmagic_value(A):- head(A,ri),magic(ri).\nmagic_value(A):- head(A,in),magic(in).\nmagic_value(A):- head(A,ch),magic(ch).\nmagic_value(A):- head(A,ck),magic(ck).\nmagic_value(A):- head(A,fs),magic(fs).\nmagic_value(A):- head(A,c),magic(c).\nmagic_value(A):- head(A,sb),magic(sb).\nmagic_value(A):- head(A,on),magic(on).\nmagic_value(A):- head(A,jw),magic(jw).\nmagic_value(A):- head(A,f),magic(f).\nmagic_value(A):- head(A,cv),magic(cv).\nmagic_value(A):- head(A,oh),magic(oh).\nmagic_value(A):- head(A,rz),magic(rz).\nmagic_value(A):- head(A,sg),magic(sg).\nmagic_value(A):- head(A,eh),magic(eh).\nmagic_value(A):- head(A,mn),magic(mn).\nmagic_value(A):- head(A,io),magic(io).\nmagic_value(A):- head(A,bq),magic(bq).\nmagic_value(A):- head(A,pu),magic(pu).\nmagic_value(A):- head(A,or),magic(or).\nmagic_value(A):- head(A,mj),magic(mj).\nmagic_value(A):- head(A,oz),magic(oz).\nmagic_value(A):- head(A,ln),magic(ln).\nmagic_value(A):- head(A,nu),magic(nu).\nmagic_value(A):- head(A,fw),magic(fw).\nmagic_value(A):- head(A,ox),magic(ox).\nmagic_value(A):- head(A,qn),magic(qn).\nmagic_value(A):- head(A,jk),magic(jk).\nmagic_value(A):- head(A,dw),magic(dw).\nmagic_value(A):- head(A,dp),magic(dp).\nmagic_value(A):- head(A,fm),magic(fm).\nmagic_value(A):- head(A,nm),magic(nm).\nmagic_value(A):- head(A,oe),magic(oe).\nmagic_value(A):- head(A,el),magic(el).\nmagic_value(A):- head(A,oq),magic(oq).\nmagic_value(A):- head(A,ls),magic(ls).\nmagic_value(A):- head(A,co),magic(co).\nmagic_value(A):- head(A,l),magic(l).\nmagic_value(A):- head(A,mi),magic(mi).\nmagic_value(A):- head(A,gn),magic(gn).\nmagic_value(A):- head(A,rr),magic(rr).\nmagic_value(A):- head(A,ja),magic(ja).\nmagic_value(A):- head(A,rs),magic(rs).\nmagic_value(A):- head(A,no),magic(no).\nmagic_value(A):- head(A,bd),magic(bd).\nmagic_value(A):- head(A,qx),magic(qx).\nmagic_value(A):- head(A,hz),magic(hz).\nmagic_value(A):- head(A,me),magic(me).\nmagic_value(A):- head(A,jx),magic(jx).\nmagic_value(A):- head(A,pq),magic(pq).\nmagic_value(A):- head(A,j),magic(j).\nmagic_value(A):- head(A,ra),magic(ra).\nmagic_value(A):- head(A,cb),magic(cb).\nmagic_value(A):- head(A,od),magic(od).\nmagic_value(A):- head(A,fv),magic(fv).\nmagic_value(A):- head(A,ks),magic(ks).\nmagic_value(A):- head(A,az),magic(az).\nmagic_value(A):- head(A,ma),magic(ma).\nmagic_value(A):- head(A,nr),magic(nr).\nmagic_value(A):- head(A,fk),magic(fk).\nmagic_value(A):- head(A,gz),magic(gz).\nmagic_value(A):- head(A,dh),magic(dh).\nmagic_value(A):- head(A,id),magic(id).\nmagic_value(A):- head(A,bp),magic(bp).\nmagic_value(A):- head(A,ku),magic(ku).\nmagic_value(A):- head(A,eb),magic(eb).\nmagic_value(A):- head(A,nx),magic(nx).\nmagic_value(A):- head(A,di),magic(di).\nmagic_value(A):- head(A,qz),magic(qz).\nmagic_value(A):- head(A,kg),magic(kg).\nmagic_value(A):- head(A,d),magic(d).\nmagic_value(A):- head(A,aa),magic(aa).\nmagic_value(A):- head(A,mv),magic(mv).\nmagic_value(A):- head(A,fo),magic(fo).\nmagic_value(A):- head(A,by),magic(by).\nmagic_value(A):- head(A,ac),magic(ac).\nmagic_value(A):- head(A,gv),magic(gv).\nmagic_value(A):- head(A,rv),magic(rv).", "is_solution": true, "conf_matrix": [200, 0, 200, 0], "total_exec_time": 2.202514042, "durations": [{"operation": "Test", "called": 1, "total": 0.04212570799999993, "mean": 0.04212570799999993, "maximum": 0.04212570799999993, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 1, "total": 0.03490062499999991, "mean": 0.03490062499999991, "maximum": 0.03490062499999991, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 1, "total": 0.00038999999999989043, "mean": 0.00038999999999989043, "maximum": 0.00038999999999989043, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_magicvalues_multipleclauses/magicpopper/80/5/stats.json", "end": true, "__type__": "Stats"}