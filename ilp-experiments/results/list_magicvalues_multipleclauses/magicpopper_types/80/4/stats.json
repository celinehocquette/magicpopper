{"log_best_programs": true, "num_literals": 0, "total_programs": 8, "total_rules": 0, "total_ground_rules": 0, "durations": {"generate": [0.0003976250000001791, 0.0005273750000001076, 0.001678917000000002, 0.0010502500000000303, 0.0016894169999999153, 0.0008017080000000121, 0.00097337499999961, 0.0005671249999998906, 0.0004881249999999504], "find_bindings_prolog": [0.03273762499999999, 0.033510249999999964, 0.14037470799999996, 0.15191195899999999, 0.16358662499999976, 0.14909329199999988], "test": [0.03993270800000004, 0.046302207999999956, 0.01929529200000002, 0.140700708, 0.15225500000000025, 0.16410329200000007, 0.14943983299999974, 0.0184306249999997], "combine": [0.09816849999999988, 0.006094708000000004, 5.419999999922709e-07, 6.660000000380251e-07, 6.249999997542943e-07, 5.419999999922709e-07, 5.00000000069889e-07, 5.419999999922709e-07], "constrain": [0.0017742499999999772, 0.00236104199999998, 0.0004300829999999145, 0.003220541000000132, 0.005228917000000166, 0.001854666999999921, 0.0016905830000002453, 0.0005343749999999758]}, "final_exec_time": 2.227928667, "stages": [], "best_programs": [], "solution": {"code": "magic_value(A):- head(A,eb),magic(eb).\nmagic_value(A):- head(A,bp),magic(bp).\nmagic_value(A):- head(A,mj),magic(mj).\nmagic_value(A):- head(A,or),magic(or).\nmagic_value(A):- head(A,d),magic(d).\nmagic_value(A):- head(A,me),magic(me).\nmagic_value(A):- head(A,ox),magic(ox).\nmagic_value(A):- head(A,ck),magic(ck).\nmagic_value(A):- head(A,ln),magic(ln).\nmagic_value(A):- head(A,ac),magic(ac).\nmagic_value(A):- head(A,fm),magic(fm).\nmagic_value(A):- head(A,co),magic(co).\nmagic_value(A):- head(A,rv),magic(rv).\nmagic_value(A):- head(A,f),magic(f).\nmagic_value(A):- head(A,id),magic(id).\nmagic_value(A):- head(A,mx),magic(mx).\nmagic_value(A):- head(A,kg),magic(kg).\nmagic_value(A):- head(A,no),magic(no).\nmagic_value(A):- head(A,az),magic(az).\nmagic_value(A):- head(A,el),magic(el).\nmagic_value(A):- head(A,fw),magic(fw).\nmagic_value(A):- head(A,io),magic(io).\nmagic_value(A):- head(A,bd),magic(bd).\nmagic_value(A):- head(A,c),magic(c).\nmagic_value(A):- head(A,fs),magic(fs).\nmagic_value(A):- head(A,rz),magic(rz).\nmagic_value(A):- head(A,gz),magic(gz).\nmagic_value(A):- head(A,fk),magic(fk).\nmagic_value(A):- head(A,hz),magic(hz).\nmagic_value(A):- head(A,kx),magic(kx).\nmagic_value(A):- head(A,gn),magic(gn).\nmagic_value(A):- head(A,dp),magic(dp).\nmagic_value(A):- head(A,cv),magic(cv).\nmagic_value(A):- head(A,nu),magic(nu).\nmagic_value(A):- head(A,l),magic(l).\nmagic_value(A):- head(A,nm),magic(nm).\nmagic_value(A):- head(A,bq),magic(bq).\nmagic_value(A):- head(A,aa),magic(aa).\nmagic_value(A):- head(A,in),magic(in).\nmagic_value(A):- head(A,gv),magic(gv).\nmagic_value(A):- head(A,by),magic(by).\nmagic_value(A):- head(A,mi),magic(mi).\nmagic_value(A):- head(A,dh),magic(dh).\nmagic_value(A):- head(A,ks),magic(ks).\nmagic_value(A):- head(A,nr),magic(nr).\nmagic_value(A):- head(A,sg),magic(sg).\nmagic_value(A):- head(A,pu),magic(pu).\nmagic_value(A):- head(A,mn),magic(mn).\nmagic_value(A):- head(A,ku),magic(ku).\nmagic_value(A):- head(A,jx),magic(jx).\nmagic_value(A):- head(A,fv),magic(fv).\nmagic_value(A):- head(A,oq),magic(oq).\nmagic_value(A):- head(A,on),magic(on).\nmagic_value(A):- head(A,qn),magic(qn).\nmagic_value(A):- head(A,sb),magic(sb).\nmagic_value(A):- head(A,oe),magic(oe).\nmagic_value(A):- head(A,ri),magic(ri).\nmagic_value(A):- head(A,cb),magic(cb).\nmagic_value(A):- head(A,ls),magic(ls).\nmagic_value(A):- head(A,od),magic(od).\nmagic_value(A):- head(A,jk),magic(jk).\nmagic_value(A):- head(A,rs),magic(rs).\nmagic_value(A):- head(A,ra),magic(ra).\nmagic_value(A):- head(A,qx),magic(qx).\nmagic_value(A):- head(A,qz),magic(qz).\nmagic_value(A):- head(A,nx),magic(nx).\nmagic_value(A):- head(A,rr),magic(rr).\nmagic_value(A):- head(A,dw),magic(dw).\nmagic_value(A):- head(A,eh),magic(eh).\nmagic_value(A):- head(A,j),magic(j).\nmagic_value(A):- head(A,oz),magic(oz).\nmagic_value(A):- head(A,ja),magic(ja).\nmagic_value(A):- head(A,jw),magic(jw).\nmagic_value(A):- head(A,ch),magic(ch).\nmagic_value(A):- head(A,fo),magic(fo).\nmagic_value(A):- head(A,oh),magic(oh).\nmagic_value(A):- head(A,di),magic(di).\nmagic_value(A):- head(A,pq),magic(pq).\nmagic_value(A):- head(A,ma),magic(ma).\nmagic_value(A):- head(A,mv),magic(mv).", "is_solution": true, "conf_matrix": [200, 0, 200, 0], "total_exec_time": 2.2279252499999997, "durations": [{"operation": "Test", "called": 1, "total": 0.03993270800000004, "mean": 0.03993270800000004, "maximum": 0.03993270800000004, "__type__": "DurationSummary"}, {"operation": "Find_Bindings_Prolog", "called": 1, "total": 0.03273762499999999, "mean": 0.03273762499999999, "maximum": 0.03273762499999999, "__type__": "DurationSummary"}, {"operation": "Generate", "called": 1, "total": 0.0003976250000001791, "mean": 0.0003976250000001791, "maximum": 0.0003976250000001791, "__type__": "DurationSummary"}], "__type__": "ProgramStats"}, "is_solution": true, "stats_file": "./results/list_magicvalues_multipleclauses/magicpopper/80/4/stats.json", "end": true, "__type__": "Stats"}